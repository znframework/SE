<?php
//----------------------------------------------------------------------
// This file automatically created and updated
//----------------------------------------------------------------------
$classMap['classes']['zn\cryptography\drivers\hashdriver'] = 'Libraries/CryptoGraphy/Drivers/Hash.php';
$classMap['classes']['zn\cryptography\drivers\mcryptdriver'] = 'Libraries/CryptoGraphy/Drivers/Mcrypt.php';
$classMap['classes']['zn\cryptography\drivers\mhashdriver'] = 'Libraries/CryptoGraphy/Drivers/Mhash.php';
$classMap['classes']['zn\cryptography\drivers\openssldriver'] = 'Libraries/CryptoGraphy/Drivers/Openssl.php';
$classMap['classes']['zn\cryptography\drivers\phashdriver'] = 'Libraries/CryptoGraphy/Drivers/Phash.php';
$classMap['classes']['zn\cryptography\exception\invalidargumentexception'] = 'Libraries/CryptoGraphy/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\cryptography\exception\invalidversionexception'] = 'Libraries/CryptoGraphy/Exception/InvalidVersionException.php';
$classMap['classes']['zn\cryptography\exception\unsupportedextensionexception'] = 'Libraries/CryptoGraphy/Exception/UnsupportedExtensionException.php';
$classMap['classes']['zn\cryptography\cryptointerface'] = 'Libraries/CryptoGraphy/Interfaces/CryptoInterface.php';
$classMap['classes']['zn\cryptography\cryptomapping'] = 'Libraries/CryptoGraphy/Mappings/CryptoMapping.php';
$classMap['classes']['zn\cryptography\crypto'] = 'Libraries/CryptoGraphy/Origins/Crypto.php';
$classMap['classes']['zn\cryptography\encode'] = 'Libraries/CryptoGraphy/Origins/Encode/Encode.php';
$classMap['classes']['zn\cryptography\encode\encodeextends'] = 'Libraries/CryptoGraphy/Origins/Encode/EncodeExtends.php';
$classMap['classes']['zn\cryptography\encode\goldenalgorithm'] = 'Libraries/CryptoGraphy/Origins/Encode/GoldenAlgorithm.php';
$classMap['classes']['zn\cryptography\encode\randompassword'] = 'Libraries/CryptoGraphy/Origins/Encode/RandomPassword.php';
$classMap['classes']['zn\cryptography\encode\superalgorithm'] = 'Libraries/CryptoGraphy/Origins/Encode/SuperAlgorithm.php';
$classMap['classes']['zn\cryptography\encode\type'] = 'Libraries/CryptoGraphy/Origins/Encode/Type.php';
$classMap['classes']['crypto'] = 'Libraries/CryptoGraphy/Statics/StaticCrypto.php';
$classMap['classes']['encode'] = 'Libraries/CryptoGraphy/Statics/StaticEncode.php';
$classMap['classes']['zn\cryptography\cryptounittest'] = 'Libraries/CryptoGraphy/UnitTests/CryptoUnitTest.php';
$classMap['classes']['zn\cryptography\encodeunittest'] = 'Libraries/CryptoGraphy/UnitTests/EncodeUnitTest.php';
$classMap['classes']['zn\datatypes\exception\filenotfoundexception'] = 'Libraries/DataTypes/Exception/FileNotFoundException.php';
$classMap['classes']['zn\datatypes\exception\invalidargumentexception'] = 'Libraries/DataTypes/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\datatypes\exception\logicexception'] = 'Libraries/DataTypes/Exception/LogicException.php';
$classMap['classes']['zn\datatypes\classesinterface'] = 'Libraries/DataTypes/Interfaces/ClassesInterface.php';
$classMap['classes']['zn\datatypes\filtersinterface'] = 'Libraries/DataTypes/Interfaces/FiltersInterface.php';
$classMap['classes']['zn\datatypes\functionsinterface'] = 'Libraries/DataTypes/Interfaces/FunctionsInterface.php';
$classMap['classes']['zn\datatypes\regexinterface'] = 'Libraries/DataTypes/Interfaces/RegexInterface.php';
$classMap['classes']['zn\datatypes\serialinterface'] = 'Libraries/DataTypes/Interfaces/SerialInterface.php';
$classMap['classes']['zn\datatypes\varsinterface'] = 'Libraries/DataTypes/Interfaces/VarsInterface.php';
$classMap['classes']['zn\datatypes\arrays\addelement'] = 'Libraries/DataTypes/Origins/Arrays/AddElement.php';
$classMap['classes']['zn\datatypes\arrays'] = 'Libraries/DataTypes/Origins/Arrays/Arrays.php';
$classMap['classes']['zn\datatypes\arrays\casing'] = 'Libraries/DataTypes/Origins/Arrays/Casing.php';
$classMap['classes']['zn\datatypes\collection'] = 'Libraries/DataTypes/Origins/Arrays/Collection.php';
$classMap['classes']['zn\datatypes\arrays\each'] = 'Libraries/DataTypes/Origins/Arrays/Each.php';
$classMap['classes']['zn\datatypes\arrays\element'] = 'Libraries/DataTypes/Origins/Arrays/Element.php';
$classMap['classes']['zn\datatypes\arrays\excluding'] = 'Libraries/DataTypes/Origins/Arrays/Excluding.php';
$classMap['classes']['zn\datatypes\arrays\exists'] = 'Libraries/DataTypes/Origins/Arrays/Exists.php';
$classMap['classes']['zn\datatypes\arrays\force'] = 'Libraries/DataTypes/Origins/Arrays/Force.php';
$classMap['classes']['zn\datatypes\arrays\getelement'] = 'Libraries/DataTypes/Origins/Arrays/GetElement.php';
$classMap['classes']['zn\datatypes\arrays\including'] = 'Libraries/DataTypes/Origins/Arrays/Including.php';
$classMap['classes']['zn\datatypes\arrays\removeelement'] = 'Libraries/DataTypes/Origins/Arrays/RemoveElement.php';
$classMap['classes']['zn\datatypes\arrays\sort'] = 'Libraries/DataTypes/Origins/Arrays/Sort.php';
$classMap['classes']['zn\datatypes\arrays\unidimensional'] = 'Libraries/DataTypes/Origins/Arrays/Unidimensional.php';
$classMap['classes']['zn\datatypes\chars'] = 'Libraries/DataTypes/Origins/Chars.php';
$classMap['classes']['zn\datatypes\classes'] = 'Libraries/DataTypes/Origins/Classes.php';
$classMap['classes']['zn\datatypes\filters'] = 'Libraries/DataTypes/Origins/Filters.php';
$classMap['classes']['zn\datatypes\functions'] = 'Libraries/DataTypes/Origins/Functions.php';
$classMap['classes']['zn\datatypes\json\decode'] = 'Libraries/DataTypes/Origins/Json/Decode.php';
$classMap['classes']['zn\datatypes\json\encode'] = 'Libraries/DataTypes/Origins/Json/Encode.php';
$classMap['classes']['zn\datatypes\json\errorinfo'] = 'Libraries/DataTypes/Origins/Json/ErrorInfo.php';
$classMap['classes']['zn\datatypes\json'] = 'Libraries/DataTypes/Origins/Json/Json.php';
$classMap['classes']['zn\datatypes\objects'] = 'Libraries/DataTypes/Origins/Objects.php';
$classMap['classes']['zn\datatypes\regex'] = 'Libraries/DataTypes/Origins/Regex.php';
$classMap['classes']['zn\datatypes\separator\decode'] = 'Libraries/DataTypes/Origins/Separator/Decode.php';
$classMap['classes']['zn\datatypes\separator\encode'] = 'Libraries/DataTypes/Origins/Separator/Encode.php';
$classMap['classes']['zn\datatypes\separator'] = 'Libraries/DataTypes/Origins/Separator/Separator.php';
$classMap['classes']['zn\datatypes\separator\separatorextends'] = 'Libraries/DataTypes/Origins/Separator/SeparatorExtends.php';
$classMap['classes']['zn\datatypes\serial'] = 'Libraries/DataTypes/Origins/Serial.php';
$classMap['classes']['zn\datatypes\strings\casing'] = 'Libraries/DataTypes/Origins/Strings/Casing.php';
$classMap['classes']['zn\datatypes\strings\element'] = 'Libraries/DataTypes/Origins/Strings/Element.php';
$classMap['classes']['zn\datatypes\strings\search'] = 'Libraries/DataTypes/Origins/Strings/Search.php';
$classMap['classes']['zn\datatypes\strings\section'] = 'Libraries/DataTypes/Origins/Strings/Section.php';
$classMap['classes']['zn\datatypes\strings\security'] = 'Libraries/DataTypes/Origins/Strings/Security.php';
$classMap['classes']['zn\datatypes\strings\split'] = 'Libraries/DataTypes/Origins/Strings/Split.php';
$classMap['classes']['zn\datatypes\stack'] = 'Libraries/DataTypes/Origins/Strings/Stack.php';
$classMap['classes']['zn\datatypes\strings'] = 'Libraries/DataTypes/Origins/Strings/Strings.php';
$classMap['classes']['zn\datatypes\strings\substitution'] = 'Libraries/DataTypes/Origins/Strings/Substitution.php';
$classMap['classes']['zn\datatypes\strings\trim'] = 'Libraries/DataTypes/Origins/Strings/Trim.php';
$classMap['classes']['zn\datatypes\vars'] = 'Libraries/DataTypes/Origins/Vars.php';
$classMap['classes']['zn\datatypes\xml\builder'] = 'Libraries/DataTypes/Origins/XML/Builder.php';
$classMap['classes']['zn\datatypes\xml\check'] = 'Libraries/DataTypes/Origins/XML/Check.php';
$classMap['classes']['zn\datatypes\xml\loader'] = 'Libraries/DataTypes/Origins/XML/Loader.php';
$classMap['classes']['zn\datatypes\xml\parser'] = 'Libraries/DataTypes/Origins/XML/Parser.php';
$classMap['classes']['zn\datatypes\xml\save'] = 'Libraries/DataTypes/Origins/XML/Save.php';
$classMap['classes']['zn\datatypes\xml'] = 'Libraries/DataTypes/Origins/XML/XML.php';
$classMap['classes']['arrays'] = 'Libraries/DataTypes/Statics/StaticArrays.php';
$classMap['classes']['chars'] = 'Libraries/DataTypes/Statics/StaticChars.php';
$classMap['classes']['classes'] = 'Libraries/DataTypes/Statics/StaticClasses.php';
$classMap['classes']['collection'] = 'Libraries/DataTypes/Statics/StaticCollection.php';
$classMap['classes']['filters'] = 'Libraries/DataTypes/Statics/StaticFilters.php';
$classMap['classes']['functions'] = 'Libraries/DataTypes/Statics/StaticFunctions.php';
$classMap['classes']['json'] = 'Libraries/DataTypes/Statics/StaticJson.php';
$classMap['classes']['regex'] = 'Libraries/DataTypes/Statics/StaticRegex.php';
$classMap['classes']['separator'] = 'Libraries/DataTypes/Statics/StaticSeparator.php';
$classMap['classes']['serial'] = 'Libraries/DataTypes/Statics/StaticSerial.php';
$classMap['classes']['stack'] = 'Libraries/DataTypes/Statics/StaticStack.php';
$classMap['classes']['strings'] = 'Libraries/DataTypes/Statics/StaticStrings.php';
$classMap['classes']['vars'] = 'Libraries/DataTypes/Statics/StaticVars.php';
$classMap['classes']['xml'] = 'Libraries/DataTypes/Statics/StaticXML.php';
$classMap['classes']['zn\datatypes\arraysunittest'] = 'Libraries/DataTypes/UnitTests/ArraysUnitTest.php';
$classMap['classes']['zn\datatypes\charsunittest'] = 'Libraries/DataTypes/UnitTests/CharsUnitTest.php';
$classMap['classes']['zn\datatypes\classesunittest'] = 'Libraries/DataTypes/UnitTests/ClassesUnitTest.php';
$classMap['classes']['zn\datatypes\filtersunittest'] = 'Libraries/DataTypes/UnitTests/FiltersUnitTest.php';
$classMap['classes']['zn\datatypes\functionsunittest'] = 'Libraries/DataTypes/UnitTests/FunctionsUnitTest.php';
$classMap['classes']['zn\datatypes\jsonunittest'] = 'Libraries/DataTypes/UnitTests/JsonUnitTest.php';
$classMap['classes']['zn\datatypes\regexunittest'] = 'Libraries/DataTypes/UnitTests/RegexUnitTest.php';
$classMap['classes']['zn\datatypes\separatorunittest'] = 'Libraries/DataTypes/UnitTests/SeparatorUnitTest.php';
$classMap['classes']['zn\datatypes\serialunittest'] = 'Libraries/DataTypes/UnitTests/SerialUnitTest.php';
$classMap['classes']['zn\datatypes\stringsunittest'] = 'Libraries/DataTypes/UnitTests/StringsUnitTest.php';
$classMap['classes']['zn\datatypes\varsunittest'] = 'Libraries/DataTypes/UnitTests/VarsUnitTest.php';
$classMap['classes']['zn\datatypes\xmlunittest'] = 'Libraries/DataTypes/UnitTests/XMLUnitTest.php';
$classMap['classes']['zn\database\abstracts\driverconnectionmappingabstract'] = 'Libraries/Database/Abstracts/DriverConnectionMappingAbstract.php';
$classMap['classes']['zn\database\drivers\mysqlidriver'] = 'Libraries/Database/Drivers/MySQLi/MySQLi.php';
$classMap['classes']['zn\database\drivers\mysqliforge'] = 'Libraries/Database/Drivers/MySQLi/MySQLiForge.php';
$classMap['classes']['zn\database\drivers\mysqlitool'] = 'Libraries/Database/Drivers/MySQLi/MySQLiTool.php';
$classMap['classes']['zn\database\drivers\mysqlitrigger'] = 'Libraries/Database/Drivers/MySQLi/MySQLiTrigger.php';
$classMap['classes']['zn\database\drivers\mysqliuser'] = 'Libraries/Database/Drivers/MySQLi/MySQLiUser.php';
$classMap['classes']['zn\database\drivers\odbcdriver'] = 'Libraries/Database/Drivers/ODBC/Odbc.php';
$classMap['classes']['zn\database\drivers\odbcforge'] = 'Libraries/Database/Drivers/ODBC/ODBCForge.php';
$classMap['classes']['zn\database\drivers\odbctool'] = 'Libraries/Database/Drivers/ODBC/ODBCTool.php';
$classMap['classes']['zn\database\drivers\odbctrigger'] = 'Libraries/Database/Drivers/ODBC/ODBCTrigger.php';
$classMap['classes']['zn\database\drivers\odbcuser'] = 'Libraries/Database/Drivers/ODBC/ODBCUser.php';
$classMap['classes']['zn\database\drivers\oracledriver'] = 'Libraries/Database/Drivers/Oracle/Oracle.php';
$classMap['classes']['zn\database\drivers\oracleforge'] = 'Libraries/Database/Drivers/Oracle/OracleForge.php';
$classMap['classes']['zn\database\drivers\oracletool'] = 'Libraries/Database/Drivers/Oracle/OracleTool.php';
$classMap['classes']['zn\database\drivers\oracletrigger'] = 'Libraries/Database/Drivers/Oracle/OracleTrigger.php';
$classMap['classes']['zn\database\drivers\oracleuser'] = 'Libraries/Database/Drivers/Oracle/OracleUser.php';
$classMap['classes']['zn\database\drivers\pdodriver'] = 'Libraries/Database/Drivers/PDO/PDO.php';
$classMap['classes']['zn\database\drivers\pdoforge'] = 'Libraries/Database/Drivers/PDO/PDOForge.php';
$classMap['classes']['zn\database\drivers\pdotool'] = 'Libraries/Database/Drivers/PDO/PDOTool.php';
$classMap['classes']['zn\database\drivers\pdotrigger'] = 'Libraries/Database/Drivers/PDO/PDOTrigger.php';
$classMap['classes']['zn\database\drivers\pdouser'] = 'Libraries/Database/Drivers/PDO/PDOUser.php';
$classMap['classes']['zn\database\drivers\postgresdriver'] = 'Libraries/Database/Drivers/Postgres/Postgres.php';
$classMap['classes']['zn\database\drivers\postgresforge'] = 'Libraries/Database/Drivers/Postgres/PostgresForge.php';
$classMap['classes']['zn\database\drivers\postgrestool'] = 'Libraries/Database/Drivers/Postgres/PostgresTool.php';
$classMap['classes']['zn\database\drivers\postgrestrigger'] = 'Libraries/Database/Drivers/Postgres/PostgresTrigger.php';
$classMap['classes']['zn\database\drivers\postgresuser'] = 'Libraries/Database/Drivers/Postgres/PostgresUser.php';
$classMap['classes']['zn\database\drivers\sqlserverforge'] = 'Libraries/Database/Drivers/SQLServer/SQLServerForge.php';
$classMap['classes']['zn\database\drivers\sqlservertool'] = 'Libraries/Database/Drivers/SQLServer/SQLServerTool.php';
$classMap['classes']['zn\database\drivers\sqlservertrigger'] = 'Libraries/Database/Drivers/SQLServer/SQLServerTrigger.php';
$classMap['classes']['zn\database\drivers\sqlserveruser'] = 'Libraries/Database/Drivers/SQLServer/SQLServerUser.php';
$classMap['classes']['zn\database\drivers\sqlserverdriver'] = 'Libraries/Database/Drivers/SQLServer/SQLserver.php';
$classMap['classes']['zn\database\drivers\sqlitedriver'] = 'Libraries/Database/Drivers/SQLite/SQLite.php';
$classMap['classes']['zn\database\drivers\sqliteforge'] = 'Libraries/Database/Drivers/SQLite/SQLiteForge.php';
$classMap['classes']['zn\database\drivers\sqlitetool'] = 'Libraries/Database/Drivers/SQLite/SQLiteTool.php';
$classMap['classes']['zn\database\drivers\sqlitetrigger'] = 'Libraries/Database/Drivers/SQLite/SQLiteTrigger.php';
$classMap['classes']['zn\database\drivers\sqliteuser'] = 'Libraries/Database/Drivers/SQLite/SQLiteUser.php';
$classMap['classes']['zn\database\exception\connectionerrorexception'] = 'Libraries/Database/Exception/ConnectionErrorException.php';
$classMap['classes']['zn\database\exception\databaseerrorexception'] = 'Libraries/Database/Exception/DatabaseErrorException.php';
$classMap['classes']['zn\database\exception\duplicatecheckexception'] = 'Libraries/Database/Exception/DuplicateCheckException.php';
$classMap['classes']['zn\database\exception\invalidargumentexception'] = 'Libraries/Database/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\database\exception\unconditionaldeleteexception'] = 'Libraries/Database/Exception/UnconditionalUpdateException..php';
$classMap['classes']['zn\database\connection'] = 'Libraries/Database/Extends/Connection.php';
$classMap['classes']['zn\database\driverextends'] = 'Libraries/Database/Extends/DriverExtends.php';
$classMap['classes']['zn\database\driverforge'] = 'Libraries/Database/Extends/DriverForge.php';
$classMap['classes']['zn\database\drivertool'] = 'Libraries/Database/Extends/DriverTool.php';
$classMap['classes']['zn\database\drivertrigger'] = 'Libraries/Database/Extends/DriverTrigger.php';
$classMap['classes']['zn\database\driveruser'] = 'Libraries/Database/Extends/DriverUser.php';
$classMap['classes']['zn\database\migrationinterface'] = 'Libraries/Database/Interfaces/MigrationInterface.php';
$classMap['classes']['zn\database\db'] = 'Libraries/Database/Origins/DB.php';
$classMap['classes']['zn\database\dbforge'] = 'Libraries/Database/Origins/DBForge.php';
$classMap['classes']['zn\database\dbtool'] = 'Libraries/Database/Origins/DBTool.php';
$classMap['classes']['zn\database\dbtrigger'] = 'Libraries/Database/Origins/DBTrigger.php';
$classMap['classes']['zn\database\dbuser'] = 'Libraries/Database/Origins/DBUser.php';
$classMap['classes']['zn\database\internalmigration'] = 'Libraries/Database/Origins/InternalMigration.php';
$classMap['classes']['migration'] = 'Resources/Statics/Libraries/Database/Origins/InternalMigration.php';
$classMap['classes']['zn\database\properties'] = 'Libraries/Database/Properties/Properties.php';
$classMap['classes']['db'] = 'Libraries/Database/Statics/StaticDB.php';
$classMap['classes']['dbforge'] = 'Libraries/Database/Statics/StaticDBForge.php';
$classMap['classes']['dbtool'] = 'Libraries/Database/Statics/StaticDBTool.php';
$classMap['classes']['dbtrigger'] = 'Libraries/Database/Statics/StaticDBTrigger.php';
$classMap['classes']['dbuser'] = 'Libraries/Database/Statics/StaticDBUser.php';
$classMap['classes']['zn\database\dbforgeunittest'] = 'Libraries/Database/UnitTests/DBForgeUnitTest.php';
$classMap['classes']['zn\database\dbtoolunittest'] = 'Libraries/Database/UnitTests/DBToolUnitTest.php';
$classMap['classes']['zn\database\dbtriggerunittest'] = 'Libraries/Database/UnitTests/DBTriggerUnitTest.php';
$classMap['classes']['zn\database\dbunittest'] = 'Libraries/Database/UnitTests/DBUnitTest.php';
$classMap['classes']['zn\database\dbuserunittest'] = 'Libraries/Database/UnitTests/DBUserUnitTest.php';
$classMap['classes']['zn\database\migrationunittest'] = 'Libraries/Database/UnitTests/MigrationUnitTest.php';
$classMap['classes']['zn\datetime\datetimecommon'] = 'Libraries/DateTime/Common/DateTimeCommon.php';
$classMap['classes']['zn\datetime\datetimecommoninterface'] = 'Libraries/DateTime/Common/DateTimeCommonInterface.php';
$classMap['classes']['zn\datetime\date'] = 'Libraries/DateTime/Origins/Date.php';
$classMap['classes']['zn\datetime\datetimeinterval'] = 'Libraries/DateTime/Origins/DateTimeInterval.php';
$classMap['classes']['zn\datetime\time'] = 'Libraries/DateTime/Origins/Time.php';
$classMap['classes']['zn\datetime\properties'] = 'Libraries/DateTime/Properties/Properties.php';
$classMap['classes']['date'] = 'Libraries/DateTime/Statics/StaticDate.php';
$classMap['classes']['datetimeinterval'] = 'Libraries/DateTime/Statics/StaticDateTimeInterval.php';
$classMap['classes']['time'] = 'Libraries/DateTime/Statics/StaticTime.php';
$classMap['classes']['zn\datetime\carbon\carbon'] = 'Libraries/DateTime/Thirdparty/Carbon.php';
$classMap['classes']['zn\datetime\carbon\carboninterval'] = 'Libraries/DateTime/Thirdparty/CarbonInterval.php';
$classMap['classes']['zn\datetime\carbon\exceptions\invaliddateexception'] = 'Libraries/DateTime/Thirdparty/Exceptions/InvalidDateException.php';
$classMap['classes']['symfony\component\translation\interval'] = 'Libraries/DateTime/Thirdparty/Translation/Interval.php';
$classMap['classes']['symfony\component\translation\loader\arrayloader'] = 'Libraries/DateTime/Thirdparty/Translation/Loader/ArrayLoader.php';
$classMap['classes']['symfony\component\translation\loader\loaderinterface'] = 'Libraries/DateTime/Thirdparty/Translation/Loader/LoaderInterface.php';
$classMap['classes']['symfony\component\translation\messagecatalogue'] = 'Libraries/DateTime/Thirdparty/Translation/MessageCatalogue.php';
$classMap['classes']['symfony\component\translation\messagecatalogueinterface'] = 'Libraries/DateTime/Thirdparty/Translation/MessageCatalogueInterface.php';
$classMap['classes']['symfony\component\translation\messageselector'] = 'Libraries/DateTime/Thirdparty/Translation/MessageSelector.php';
$classMap['classes']['symfony\component\translation\metadataawareinterface'] = 'Libraries/DateTime/Thirdparty/Translation/MetadataAwareInterface.php';
$classMap['classes']['symfony\component\translation\pluralizationrules'] = 'Libraries/DateTime/Thirdparty/Translation/PluralizationRules.php';
$classMap['classes']['symfony\component\translation\translator'] = 'Libraries/DateTime/Thirdparty/Translation/Translator.php';
$classMap['classes']['symfony\component\translation\translatorbaginterface'] = 'Libraries/DateTime/Thirdparty/Translation/TranslatorBagInterface.php';
$classMap['classes']['symfony\component\translation\translatorinterface'] = 'Libraries/DateTime/Thirdparty/Translation/TranslatorInterface.php';
$classMap['classes']['zn\datetime\dateunittest'] = 'Libraries/DateTime/UnitTests/DateUnitTest.php';
$classMap['classes']['zn\datetime\timeunittest'] = 'Libraries/DateTime/UnitTests/TimeUnitTest.php';
$classMap['classes']['zn\encodingsupport\exception\invalidargumentexception'] = 'Libraries/EncodingSupport/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\encodingsupport\ivinterface'] = 'Libraries/EncodingSupport/Interfaces/IVInterface.php';
$classMap['classes']['zn\encodingsupport\mbinterface'] = 'Libraries/EncodingSupport/Interfaces/MBInterface.php';
$classMap['classes']['zn\encodingsupport\iv'] = 'Libraries/EncodingSupport/Origins/IV.php';
$classMap['classes']['zn\encodingsupport\mb'] = 'Libraries/EncodingSupport/Origins/MB.php';
$classMap['classes']['zn\encodingsupport\multilanguage\delete'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/Delete.php';
$classMap['classes']['zn\encodingsupport\multilanguage\grid'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/Grid.php';
$classMap['classes']['zn\encodingsupport\multilanguage\insert'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/Insert.php';
$classMap['classes']['zn\encodingsupport\ml'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/ML.php';
$classMap['classes']['zn\encodingsupport\multilanguage\mlextends'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/MLExtends.php';
$classMap['classes']['zn\encodingsupport\multilanguage\select'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/Select.php';
$classMap['classes']['zn\encodingsupport\multilanguage\update'] = 'Libraries/EncodingSupport/Origins/MultiLanguage/Update.php';
$classMap['classes']['iv'] = 'Libraries/EncodingSupport/Statics/StaticIV.php';
$classMap['classes']['mb'] = 'Libraries/EncodingSupport/Statics/StaticMB.php';
$classMap['classes']['ml'] = 'Libraries/EncodingSupport/Statics/StaticML.php';
$classMap['classes']['zn\encodingsupport\ivunittest'] = 'Libraries/EncodingSupport/UnitTests/IVUnitTest.php';
$classMap['classes']['zn\encodingsupport\mbunittest'] = 'Libraries/EncodingSupport/UnitTests/MBUnitTest.php';
$classMap['classes']['zn\encodingsupport\mlunittest'] = 'Libraries/EncodingSupport/UnitTests/MLUnitTest.php';
$classMap['classes']['zn\errorhandling\errors'] = 'Libraries/ErrorHandling/Errors/Errors.php';
$classMap['classes']['debugexception'] = 'Libraries/ErrorHandling/Exceptions/DebugException.php';
$classMap['classes']['zn\errorhandling\exceptions'] = 'Libraries/ErrorHandling/Exceptions/Exceptions.php';
$classMap['classes']['generalexception'] = 'Libraries/ErrorHandling/Exceptions/GeneralException.php';
$classMap['classes']['generalexceptioninterface'] = 'Libraries/ErrorHandling/Exceptions/GeneralExceptionInterface.php';
$classMap['classes']['zn\errorhandling\exceptionsinterface'] = 'Libraries/ErrorHandling/Interfaces/ExceptionsInterface.php';
$classMap['classes']['errors'] = 'Libraries/ErrorHandling/Statics/StaticErrors.php';
$classMap['classes']['exceptions'] = 'Libraries/ErrorHandling/Statics/StaticExceptions.php';
$classMap['classes']['zn\filesystem\exception\fileallreadyexception'] = 'Libraries/FileSystem/Exception/FileAllreadyException.php';
$classMap['classes']['zn\filesystem\exception\filenotfoundexception'] = 'Libraries/FileSystem/Exception/FileNotFoundException.php';
$classMap['classes']['zn\filesystem\exception\fileremotedownloadexception'] = 'Libraries/FileSystem/Exception/FileRemoteDownloadException.php';
$classMap['classes']['zn\filesystem\exception\fileremoteuploadexception'] = 'Libraries/FileSystem/Exception/FileRemoteUploadException.php';
$classMap['classes']['zn\filesystem\exception\folderallreadyexception'] = 'Libraries/FileSystem/Exception/FolderAllreadyException.php';
$classMap['classes']['zn\filesystem\exception\folderchangedirexception'] = 'Libraries/FileSystem/Exception/FolderChangeDirException.php';
$classMap['classes']['zn\filesystem\exception\folderchangenameexception'] = 'Libraries/FileSystem/Exception/FolderChangeNameException.php';
$classMap['classes']['zn\filesystem\exception\foldernotfoundexception'] = 'Libraries/FileSystem/Exception/FolderNotFoundException.php';
$classMap['classes']['zn\filesystem\exception\ioexception'] = 'Libraries/FileSystem/Exception/IOException.php';
$classMap['classes']['zn\filesystem\exception\undefinedfunctionexception'] = 'Libraries/FileSystem/Exception/UndefinedFunctionException.php';
$classMap['classes']['zn\filesystem\document\documentinterface'] = 'Libraries/FileSystem/Interfaces/DocumentInterface.php';
$classMap['classes']['zn\filesystem\generateinterface'] = 'Libraries/FileSystem/Interfaces/GenerateInterface.php';
$classMap['classes']['zn\filesystem\uploadinterface'] = 'Libraries/FileSystem/Interfaces/UploadInterface.php';
$classMap['classes']['zn\filesystem\document\document'] = 'Libraries/FileSystem/Origins/Document.php';
$classMap['classes']['zn\filesystem\excel\arraytoxls'] = 'Libraries/FileSystem/Origins/Excel/ArrayToXLS.php';
$classMap['classes']['zn\filesystem\excel\csvtoarray'] = 'Libraries/FileSystem/Origins/Excel/CSVToArray.php';
$classMap['classes']['zn\filesystem\excel'] = 'Libraries/FileSystem/Origins/Excel/Excel.php';
$classMap['classes']['zn\filesystem\ftp\connection'] = 'Libraries/FileSystem/Origins/FTP/Connection.php';
$classMap['classes']['zn\filesystem\ftp'] = 'Libraries/FileSystem/Origins/FTP/FTP.php';
$classMap['classes']['zn\filesystem\ftp\forge'] = 'Libraries/FileSystem/Origins/FTP/Forge.php';
$classMap['classes']['zn\filesystem\ftp\info'] = 'Libraries/FileSystem/Origins/FTP/Info.php';
$classMap['classes']['zn\filesystem\ftp\transfer'] = 'Libraries/FileSystem/Origins/FTP/Transfer.php';
$classMap['classes']['zn\filesystem\file\content'] = 'Libraries/FileSystem/Origins/File/Content.php';
$classMap['classes']['zn\filesystem\file\extension'] = 'Libraries/FileSystem/Origins/File/Extension.php';
$classMap['classes']['zn\filesystem\file'] = 'Libraries/FileSystem/Origins/File/File.php';
$classMap['classes']['zn\filesystem\file\forge'] = 'Libraries/FileSystem/Origins/File/Forge.php';
$classMap['classes']['zn\filesystem\file\info'] = 'Libraries/FileSystem/Origins/File/Info.php';
$classMap['classes']['zn\filesystem\file\loader'] = 'Libraries/FileSystem/Origins/File/Loader.php';
$classMap['classes']['zn\filesystem\file\transfer'] = 'Libraries/FileSystem/Origins/File/Transfer.php';
$classMap['classes']['zn\filesystem\folder\filelist'] = 'Libraries/FileSystem/Origins/Folder/FileList.php';
$classMap['classes']['zn\filesystem\folder'] = 'Libraries/FileSystem/Origins/Folder/Folder.php';
$classMap['classes']['zn\filesystem\folder\forge'] = 'Libraries/FileSystem/Origins/Folder/Forge.php';
$classMap['classes']['zn\filesystem\folder\info'] = 'Libraries/FileSystem/Origins/Folder/Info.php';
$classMap['classes']['zn\filesystem\generate'] = 'Libraries/FileSystem/Origins/Generate.php';
$classMap['classes']['zn\filesystem\upload'] = 'Libraries/FileSystem/Origins/Upload.php';
$classMap['classes']['document'] = 'Libraries/FileSystem/Statics/StaticDocument.php';
$classMap['classes']['excel'] = 'Libraries/FileSystem/Statics/StaticExcel.php';
$classMap['classes']['upload'] = 'Libraries/FileSystem/Statics/StaticUpload.php';
$classMap['classes']['file'] = 'Libraries/FileSystem/Statics/StaticFile.php';
$classMap['classes']['folder'] = 'Libraries/FileSystem/Statics/StaticFolder.php';
$classMap['classes']['generate'] = 'Libraries/FileSystem/Statics/StaticGenerate.php';
$classMap['classes']['zn\filesystem\excelunittest'] = 'Libraries/FileSystem/UnitTests/ExcelUnitTest.php';
$classMap['classes']['zn\filesystem\ftpunittest'] = 'Libraries/FileSystem/UnitTests/FTPUnitTest.php';
$classMap['classes']['zn\filesystem\fileunittest'] = 'Libraries/FileSystem/UnitTests/FileUnitTest.php';
$classMap['classes']['zn\filesystem\folderunittest'] = 'Libraries/FileSystem/UnitTests/FolderUnitTest.php';
$classMap['classes']['zn\filesystem\generateunittest'] = 'Libraries/FileSystem/UnitTests/GenerateUnitTest.php';
$classMap['classes']['zn\helpers\exception\invalidargumentexception'] = 'Libraries/Helpers/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\helpers\exception\logicexception'] = 'Libraries/Helpers/Exception/LogicException.php';
$classMap['classes']['zn\helpers\loggerinterface'] = 'Libraries/Helpers/Interfaces/LoggerInterface.php';
$classMap['classes']['zn\helpers\cleaner'] = 'Libraries/Helpers/Origins/Cleaner.php';
$classMap['classes']['zn\helpers\converter'] = 'Libraries/Helpers/Origins/Converter.php';
$classMap['classes']['zn\helpers\debugger'] = 'Libraries/Helpers/Origins/Debugger.php';
$classMap['classes']['zn\helpers\hook'] = 'Libraries/Helpers/Origins/Hook.php';
$classMap['classes']['zn\helpers\iterate'] = 'Libraries/Helpers/Origins/Iterate.php';
$classMap['classes']['zn\helpers\limiter'] = 'Libraries/Helpers/Origins/Limiter.php';
$classMap['classes']['zn\helpers\logger'] = 'Libraries/Helpers/Origins/Logger.php';
$classMap['classes']['zn\helpers\mime'] = 'Libraries/Helpers/Origins/Mime.php';
$classMap['classes']['zn\helpers\reflect'] = 'Libraries/Helpers/Origins/Reflect.php';
$classMap['classes']['zn\helpers\rounder'] = 'Libraries/Helpers/Origins/Rounder.php';
$classMap['classes']['zn\helpers\searcher'] = 'Libraries/Helpers/Origins/Searcher.php';
$classMap['classes']['zn\helpers\symbol'] = 'Libraries/Helpers/Origins/Symbol.php';
$classMap['classes']['zn\helpers\tester'] = 'Libraries/Helpers/Origins/Tester.php';
$classMap['classes']['cleaner'] = 'Libraries/Helpers/Statics/StaticSymbol.php';
$classMap['classes']['converter'] = 'Libraries/Helpers/Statics/StaticConverter.php';
$classMap['classes']['debugger'] = 'Libraries/Helpers/Statics/StaticDebugger.php';
$classMap['classes']['hook'] = 'Libraries/Helpers/Statics/StaticHook.php';
$classMap['classes']['iterate'] = 'Libraries/Helpers/Statics/StaticIterate.php';
$classMap['classes']['limiter'] = 'Libraries/Helpers/Statics/StaticLimiter.php';
$classMap['classes']['logger'] = 'Libraries/Helpers/Statics/StaticLogger.php';
$classMap['classes']['mime'] = 'Libraries/Helpers/Statics/StaticMime.php';
$classMap['classes']['reflect'] = 'Libraries/Helpers/Statics/StaticReflect.php';
$classMap['classes']['rounder'] = 'Libraries/Helpers/Statics/StaticRounder.php';
$classMap['classes']['searcher'] = 'Libraries/Helpers/Statics/StaticSearcher.php';
$classMap['classes']['tester'] = 'Libraries/Helpers/Statics/StaticTester.php';
$classMap['classes']['zn\helpers\cleanerunittest'] = 'Libraries/Helpers/UnitTests/CleanerUnitTest.php';
$classMap['classes']['zn\helpers\converterunittest'] = 'Libraries/Helpers/UnitTests/ConverterUnitTest.php';
$classMap['classes']['zn\helpers\limiterunittest'] = 'Libraries/Helpers/UnitTests/LimiterUnitTest.php';
$classMap['classes']['zn\helpers\loggerunittest'] = 'Libraries/Helpers/UnitTests/LoggerUnitTest.php';
$classMap['classes']['zn\helpers\rounderunittest'] = 'Libraries/Helpers/UnitTests/RounderUnitTest.php';
$classMap['classes']['zn\helpers\searcherunittest'] = 'Libraries/Helpers/UnitTests/SearcherUnitTest.php';
$classMap['classes']['zn\imageprocessing\exception\imagenotfoundexception'] = 'Libraries/ImageProcessing/Exception/ImageNotFoundException.php';
$classMap['classes']['zn\imageprocessing\exception\invalidargumentexception'] = 'Libraries/ImageProcessing/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\imageprocessing\exception\invalidimagefileexception'] = 'Libraries/ImageProcessing/Exception/InvalidImageFileException.php';
$classMap['classes']['zn\imageprocessing\gdinterface'] = 'Libraries/ImageProcessing/Interfaces/GraphInterface.php';
$classMap['classes']['zn\imageprocessing\imageinterface'] = 'Libraries/ImageProcessing/Interfaces/ImageInterface.php';
$classMap['classes']['zn\imageprocessing\thumbinterface'] = 'Libraries/ImageProcessing/Interfaces/ThumbInterface.php';
$classMap['classes']['zn\imageprocessing\gd'] = 'Libraries/ImageProcessing/Origins/GD.php';
$classMap['classes']['zn\imageprocessing\image'] = 'Libraries/ImageProcessing/Origins/Image.php';
$classMap['classes']['zn\imageprocessing\thumb'] = 'Libraries/ImageProcessing/Origins/Thumb.php';
$classMap['classes']['zn\imageprocessing\properties'] = 'Libraries/ImageProcessing/Properties/Properties.php';
$classMap['classes']['gd'] = 'Libraries/ImageProcessing/Statics/StaticGD.php';
$classMap['classes']['image'] = 'Libraries/ImageProcessing/Statics/StaticImage.php';
$classMap['classes']['thumb'] = 'Libraries/ImageProcessing/Statics/StaticThumb.php';
$classMap['classes']['zn\imageprocessing\gdunittest'] = 'Libraries/ImageProcessing/UnitTests/GDUnitTest.php';
$classMap['classes']['zn\imageprocessing\imageunittest'] = 'Libraries/ImageProcessing/UnitTests/ImageUnitTest.php';
$classMap['classes']['zn\imageprocessing\thumbunittest'] = 'Libraries/ImageProcessing/UnitTests/ThumbUnitTest.php';
$classMap['classes']['zn\individualstructures\abstracts\cachedrivermappingabstract'] = 'Libraries/IndividualStructures/Abstracts/CacheDriverMappingAbstract.php';
$classMap['classes']['zn\individualstructures\abstracts\compressdrivermappingabstract'] = 'Libraries/IndividualStructures/Abstracts/CompressDriverMappingAbstract.php';
$classMap['classes']['zn\individualstructures\exception\activationcolumnexception'] = 'Libraries/IndividualStructures/Exception/ActivationColumnException.php';
$classMap['classes']['zn\individualstructures\exception\authenticationfailedexception'] = 'Libraries/IndividualStructures/Exception/AuthenticationFailedException.php';
$classMap['classes']['zn\individualstructures\exception\connectionrefusedexception'] = 'Libraries/IndividualStructures/Exception/ConnectionRefusedException.php';
$classMap['classes']['zn\individualstructures\exception\filenotfoundexception'] = 'Libraries/IndividualStructures/Exception/FileNotFoundException.php';
$classMap['classes']['zn\individualstructures\exception\invalidargumentexception'] = 'Libraries/IndividualStructures/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\individualstructures\exception\unsupporteddriverexception'] = 'Libraries/IndividualStructures/Exception/UnsupportedDriverException.php';
$classMap['classes']['zn\individualstructures\cacheinterface'] = 'Libraries/IndividualStructures/Interfaces/CacheInterface.php';
$classMap['classes']['coalesceinterface'] = 'Libraries/IndividualStructures/Interfaces/CoalesceInterface.php';
$classMap['classes']['zn\individualstructures\compressinterface'] = 'Libraries/IndividualStructures/Interfaces/CompressInterface.php';
$classMap['classes']['zn\individualstructures\isinterface'] = 'Libraries/IndividualStructures/Interfaces/ISInterface.php';
$classMap['classes']['zn\individualstructures\langinterface'] = 'Libraries/IndividualStructures/Interfaces/LangInterface.php';
$classMap['classes']['zn\individualstructures\outputinterface'] = 'Libraries/IndividualStructures/Interfaces/OutputInterface.php';
$classMap['classes']['zn\individualstructures\supportinterface'] = 'Libraries/IndividualStructures/Interfaces/SupportInterface.php';
$classMap['classes']['zn\individualstructures\benchmark'] = 'Libraries/IndividualStructures/Origins/Benchmark/Benchmark.php';
$classMap['classes']['zn\individualstructures\benchmark\elapsedtime'] = 'Libraries/IndividualStructures/Origins/Benchmark/ElapsedTime.php';
$classMap['classes']['zn\individualstructures\benchmark\fileusage'] = 'Libraries/IndividualStructures/Origins/Benchmark/FileUsage.php';
$classMap['classes']['zn\individualstructures\benchmark\memoryusage'] = 'Libraries/IndividualStructures/Origins/Benchmark/MemoryUsage.php';
$classMap['classes']['zn\individualstructures\benchmark\properties'] = 'Libraries/IndividualStructures/Origins/Benchmark/Properties.php';
$classMap['classes']['zn\individualstructures\benchmark\run'] = 'Libraries/IndividualStructures/Origins/Benchmark/Run.php';
$classMap['classes']['zn\individualstructures\benchmark\testing'] = 'Libraries/IndividualStructures/Origins/Benchmark/Testing.php';
$classMap['classes']['zn\individualstructures\buffer'] = 'Libraries/IndividualStructures/Origins/Buffer/Buffer.php';
$classMap['classes']['zn\individualstructures\buffer\callback'] = 'Libraries/IndividualStructures/Origins/Buffer/Callback.php';
$classMap['classes']['zn\individualstructures\buffer\delete'] = 'Libraries/IndividualStructures/Origins/Buffer/Delete.php';
$classMap['classes']['zn\individualstructures\buffer\file'] = 'Libraries/IndividualStructures/Origins/Buffer/File.php';
$classMap['classes']['zn\individualstructures\buffer\insert'] = 'Libraries/IndividualStructures/Origins/Buffer/Insert.php';
$classMap['classes']['zn\individualstructures\buffer\select'] = 'Libraries/IndividualStructures/Origins/Buffer/Select.php';
$classMap['classes']['zn\individualstructures\cache'] = 'Libraries/IndividualStructures/Origins/Cache/Cache.php';
$classMap['classes']['zn\individualstructures\cache\drivers\apcdriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/Apc.php';
$classMap['classes']['zn\individualstructures\cache\drivers\apcudriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/Apcu.php';
$classMap['classes']['zn\individualstructures\cache\drivers\filedriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/File.php';
$classMap['classes']['zn\individualstructures\cache\drivers\memcachedriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/Memcache.php';
$classMap['classes']['zn\individualstructures\cache\drivers\opcachedriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/Opcache.php';
$classMap['classes']['zn\individualstructures\cache\drivers\redisdriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/Redis.php';
$classMap['classes']['zn\individualstructures\cache\drivers\wincachedriver'] = 'Libraries/IndividualStructures/Origins/Cache/Drivers/Wincache.php';
$classMap['classes']['zn\individualstructures\cart'] = 'Libraries/IndividualStructures/Origins/Cart/Cart.php';
$classMap['classes']['zn\individualstructures\cart\cartextends'] = 'Libraries/IndividualStructures/Origins/Cart/CartExtends.php';
$classMap['classes']['zn\individualstructures\cart\delete'] = 'Libraries/IndividualStructures/Origins/Cart/Delete.php';
$classMap['classes']['zn\individualstructures\cart\insert'] = 'Libraries/IndividualStructures/Origins/Cart/Insert.php';
$classMap['classes']['zn\individualstructures\cart\money'] = 'Libraries/IndividualStructures/Origins/Cart/Money.php';
$classMap['classes']['zn\individualstructures\cart\properties'] = 'Libraries/IndividualStructures/Origins/Cart/Properties.php';
$classMap['classes']['zn\individualstructures\cart\select'] = 'Libraries/IndividualStructures/Origins/Cart/Select.php';
$classMap['classes']['zn\individualstructures\cart\total'] = 'Libraries/IndividualStructures/Origins/Cart/Total.php';
$classMap['classes']['zn\individualstructures\cart\update'] = 'Libraries/IndividualStructures/Origins/Cart/Update.php';
$classMap['classes']['coalesce'] = 'Libraries/IndividualStructures/Origins/Coalesce.php';
$classMap['classes']['zn\individualstructures\compress'] = 'Libraries/IndividualStructures/Origins/Compress/Compress.php';
$classMap['classes']['zn\individualstructures\compress\drivers\bzdriver'] = 'Libraries/IndividualStructures/Origins/Compress/Drivers/BZ.php';
$classMap['classes']['zn\individualstructures\compress\drivers\gzdriver'] = 'Libraries/IndividualStructures/Origins/Compress/Drivers/GZ.php';
$classMap['classes']['zn\individualstructures\compress\drivers\lzfdriver'] = 'Libraries/IndividualStructures/Origins/Compress/Drivers/LZF.php';
$classMap['classes']['zn\individualstructures\compress\drivers\rardriver'] = 'Libraries/IndividualStructures/Origins/Compress/Drivers/RAR.php';
$classMap['classes']['zn\individualstructures\compress\drivers\zipdriver'] = 'Libraries/IndividualStructures/Origins/Compress/Drivers/ZIP.php';
$classMap['classes']['zn\individualstructures\compress\drivers\zlibdriver'] = 'Libraries/IndividualStructures/Origins/Compress/Drivers/ZLIB.php';
$classMap['classes']['zn\individualstructures\is'] = 'Libraries/IndividualStructures/Origins/IS.php';
$classMap['classes']['zn\individualstructures\import\bootstrapextends'] = 'Libraries/IndividualStructures/Origins/Import/BootstrapExtends.php';
$classMap['classes']['zn\individualstructures\import\font'] = 'Libraries/IndividualStructures/Origins/Import/Font.php';
$classMap['classes']['zn\individualstructures\import\handload'] = 'Libraries/IndividualStructures/Origins/Import/Handload.php';
$classMap['classes']['zn\individualstructures\import'] = 'Libraries/IndividualStructures/Origins/Import/Import.php';
$classMap['classes']['zn\individualstructures\import\masterpage'] = 'Libraries/IndividualStructures/Origins/Import/Masterpage.php';
$classMap['classes']['zn\individualstructures\import\package'] = 'Libraries/IndividualStructures/Origins/Import/Package.php';
$classMap['classes']['zn\individualstructures\import\properties'] = 'Libraries/IndividualStructures/Origins/Import/Properties.php';
$classMap['classes']['zn\individualstructures\import\script'] = 'Libraries/IndividualStructures/Origins/Import/Script.php';
$classMap['classes']['zn\individualstructures\import\something'] = 'Libraries/IndividualStructures/Origins/Import/Something.php';
$classMap['classes']['zn\individualstructures\import\style'] = 'Libraries/IndividualStructures/Origins/Import/Style.php';
$classMap['classes']['zn\individualstructures\import\template'] = 'Libraries/IndividualStructures/Origins/Import/Template.php';
$classMap['classes']['zn\individualstructures\import\view'] = 'Libraries/IndividualStructures/Origins/Import/View.php';
$classMap['classes']['zn\individualstructures\lang'] = 'Libraries/IndividualStructures/Origins/Lang.php';
$classMap['classes']['zn\individualstructures\output'] = 'Libraries/IndividualStructures/Origins/Output.php';
$classMap['classes']['zn\individualstructures\permission\method'] = 'Libraries/IndividualStructures/Origins/Permission/Method.php';
$classMap['classes']['zn\individualstructures\permission\page'] = 'Libraries/IndividualStructures/Origins/Permission/Page.php';
$classMap['classes']['zn\individualstructures\permission'] = 'Libraries/IndividualStructures/Origins/Permission/Permission.php';
$classMap['classes']['zn\individualstructures\permission\permissionextends'] = 'Libraries/IndividualStructures/Origins/Permission/PermissionExtends.php';
$classMap['classes']['zn\individualstructures\permission\process'] = 'Libraries/IndividualStructures/Origins/Permission/Process.php';
$classMap['classes']['zn\individualstructures\security\crosssiterequestforgery'] = 'Libraries/IndividualStructures/Origins/Security/CrossSiteRequestForgery.php';
$classMap['classes']['zn\individualstructures\security\crosssitescripting'] = 'Libraries/IndividualStructures/Origins/Security/CrossSiteScripting.php';
$classMap['classes']['zn\individualstructures\security\foreignchar'] = 'Libraries/IndividualStructures/Origins/Security/ForeignChar.php';
$classMap['classes']['zn\individualstructures\security\html'] = 'Libraries/IndividualStructures/Origins/Security/HTML.php';
$classMap['classes']['zn\individualstructures\security\injection'] = 'Libraries/IndividualStructures/Origins/Security/Injection.php';
$classMap['classes']['zn\individualstructures\security\nastycode'] = 'Libraries/IndividualStructures/Origins/Security/NastyCode.php';
$classMap['classes']['zn\individualstructures\security\php'] = 'Libraries/IndividualStructures/Origins/Security/PHP.php';
$classMap['classes']['zn\individualstructures\security\properties'] = 'Libraries/IndividualStructures/Origins/Security/Properties.php';
$classMap['classes']['zn\individualstructures\security\script'] = 'Libraries/IndividualStructures/Origins/Security/Script.php';
$classMap['classes']['zn\individualstructures\secure'] = 'Libraries/IndividualStructures/Origins/Security/Secure.php';
$classMap['classes']['zn\individualstructures\security'] = 'Libraries/IndividualStructures/Origins/Security/Security.php';
$classMap['classes']['zn\individualstructures\socialite'] = 'Libraries/IndividualStructures/Origins/Socialite/Socialite.php';
$classMap['classes']['hybridauth\adapter\abstractadapter'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Adapter/AbstractAdapter.php';
$classMap['classes']['hybridauth\adapter\adapterinterface'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Adapter/AdapterInterface.php';
$classMap['classes']['hybridauth\adapter\datastoretrait'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Adapter/DataStoreTrait.php';
$classMap['classes']['hybridauth\adapter\oauth1'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Adapter/OAuth1.php';
$classMap['classes']['hybridauth\adapter\oauth2'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Adapter/OAuth2.php';
$classMap['classes']['hybridauth\adapter\openid'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Adapter/OpenID.php';
$classMap['classes']['hybridauth\data\collection'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Data/Collection.php';
$classMap['classes']['hybridauth\data\parser'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Data/Parser.php';
$classMap['classes']['hybridauth\exception\authorizationdeniedexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/AuthorizationDeniedException.php';
$classMap['classes']['hybridauth\exception\badmethodcallexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/BadMethodCallException.php';
$classMap['classes']['hybridauth\exception\exception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/Exception.php';
$classMap['classes']['hybridauth\exception\exceptioninterface'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/ExceptionInterface.php';
$classMap['classes']['hybridauth\exception\httpclientfailureexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/HttpClientFailureException.php';
$classMap['classes']['hybridauth\exception\httprequestfailedexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/HttpRequestFailedException.php';
$classMap['classes']['hybridauth\exception\invalidaccesstokenexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidAccessTokenException.php';
$classMap['classes']['hybridauth\exception\invalidapplicationcredentialsexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidApplicationCredentialsException.php';
$classMap['classes']['hybridauth\exception\invalidargumentexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidArgumentException.php';
$classMap['classes']['hybridauth\exception\invalidauthorizationcodeexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidAuthorizationCodeException.php';
$classMap['classes']['hybridauth\exception\invalidauthorizationstateexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidAuthorizationStateException.php';
$classMap['classes']['hybridauth\exception\invalidoauthtokenexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidOauthTokenException.php';
$classMap['classes']['hybridauth\exception\invalidopenididentifierexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/InvalidOpenidIdentifierException.php';
$classMap['classes']['hybridauth\exception\notimplementedexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/NotImplementedException.php';
$classMap['classes']['hybridauth\exception\runtimeexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/RuntimeException.php';
$classMap['classes']['hybridauth\exception\unexpectedapiresponseexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/UnexpectedApiResponseException.php';
$classMap['classes']['hybridauth\exception\unexpectedvalueexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Exception/UnexpectedValueException.php';
$classMap['classes']['hybridauth\httpclient\curl'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/HttpClient/Curl.php';
$classMap['classes']['hybridauth\httpclient\guzzle'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/HttpClient/Guzzle.php';
$classMap['classes']['hybridauth\httpclient\httpclientinterface'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/HttpClient/HttpClientInterface.php';
$classMap['classes']['hybridauth\httpclient\util'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/HttpClient/Util.php';
$classMap['classes']['hybridauth\hybridauth'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Hybridauth.php';
$classMap['classes']['hybridauth\logger\logger'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Logger/Logger.php';
$classMap['classes']['hybridauth\logger\loggerinterface'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Logger/LoggerInterface.php';
$classMap['classes']['hybridauth\logger\psr3loggerwrapper'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Logger/Psr3LoggerWrapper.php';
$classMap['classes']['hybridauth\provider\aolopenid'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/AOLOpenID.php';
$classMap['classes']['hybridauth\provider\bitbucket'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/BitBucket.php';
$classMap['classes']['hybridauth\provider\discord'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Discord.php';
$classMap['classes']['hybridauth\provider\disqus'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Disqus.php';
$classMap['classes']['hybridauth\provider\dribbble'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Dribbble.php';
$classMap['classes']['hybridauth\provider\facebook'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Facebook.php';
$classMap['classes']['hybridauth\provider\foursquare'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Foursquare.php';
$classMap['classes']['hybridauth\provider\github'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/GitHub.php';
$classMap['classes']['hybridauth\provider\gitlab'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/GitLab.php';
$classMap['classes']['hybridauth\provider\google'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Google.php';
$classMap['classes']['hybridauth\provider\instagram'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Instagram.php';
$classMap['classes']['hybridauth\provider\linkedin'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/LinkedIn.php';
$classMap['classes']['hybridauth\provider\odnoklassniki'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Odnoklassniki.php';
$classMap['classes']['hybridauth\provider\openid'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/OpenID.php';
$classMap['classes']['hybridauth\provider\paypalopenid'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/PaypalOpenID.php';
$classMap['classes']['hybridauth\provider\reddit'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Reddit.php';
$classMap['classes']['hybridauth\provider\stackexchange'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/StackExchange.php';
$classMap['classes']['hybridauth\provider\stackexchangeopenid'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/StackExchangeOpenID.php';
$classMap['classes']['hybridauth\provider\steam'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Steam.php';
$classMap['classes']['hybridauth\provider\tumblr'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Tumblr.php';
$classMap['classes']['hybridauth\provider\twitchtv'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/TwitchTV.php';
$classMap['classes']['hybridauth\provider\twitter'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Twitter.php';
$classMap['classes']['hybridauth\provider\vkontakte'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Vkontakte.php';
$classMap['classes']['hybridauth\provider\windowslive'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/WindowsLive.php';
$classMap['classes']['hybridauth\provider\wordpress'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/WordPress.php';
$classMap['classes']['hybridauth\provider\yahoo'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/Yahoo.php';
$classMap['classes']['hybridauth\provider\yahooopenid'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Provider/YahooOpenID.php';
$classMap['classes']['hybridauth\storage\session'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Storage/Session.php';
$classMap['classes']['hybridauth\storage\storageinterface'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Storage/StorageInterface.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthconsumer'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Thirdparty/OAuth/OAuthConsumer.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthrequest'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Thirdparty/OAuth/OAuthRequest.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthsignaturemethod'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Thirdparty/OAuth/OAuthSignatureMethod.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthsignaturemethodhmacsha1'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Thirdparty/OAuth/OAuthSignatureMethodHMACSHA1.php';
$classMap['classes']['hybridauth\thirdparty\oauth\oauthutil'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Thirdparty/OAuth/OAuthUtil.php';
$classMap['classes']['hybridauth\thirdparty\openid\errorexception'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/Thirdparty/OpenID/LightOpenID.php';
$classMap['classes']['hybridauth\user\activity'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/User/Activity.php';
$classMap['classes']['hybridauth\user\contact'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/User/Contact.php';
$classMap['classes']['hybridauth\user\profile'] = 'Libraries/IndividualStructures/Origins/Socialite/Thirdparty/User/Profile.php';
$classMap['classes']['zn\individualstructures\support'] = 'Libraries/IndividualStructures/Origins/Support.php';
$classMap['classes']['zn\individualstructures\user\data'] = 'Libraries/IndividualStructures/Origins/User/Data.php';
$classMap['classes']['zn\individualstructures\user\forgotpassword'] = 'Libraries/IndividualStructures/Origins/User/ForgotPassword.php';
$classMap['classes']['zn\individualstructures\user\ip'] = 'Libraries/IndividualStructures/Origins/User/IP.php';
$classMap['classes']['zn\individualstructures\user\information'] = 'Libraries/IndividualStructures/Origins/User/Information.php';
$classMap['classes']['zn\individualstructures\user\login'] = 'Libraries/IndividualStructures/Origins/User/Login.php';
$classMap['classes']['zn\individualstructures\user\logout'] = 'Libraries/IndividualStructures/Origins/User/Logout.php';
$classMap['classes']['zn\individualstructures\user\properties'] = 'Libraries/IndividualStructures/Origins/User/Properties.php';
$classMap['classes']['zn\individualstructures\user\register'] = 'Libraries/IndividualStructures/Origins/User/Register.php';
$classMap['classes']['zn\individualstructures\user\sendemail'] = 'Libraries/IndividualStructures/Origins/User/SendEmail.php';
$classMap['classes']['zn\individualstructures\user\update'] = 'Libraries/IndividualStructures/Origins/User/Update.php';
$classMap['classes']['zn\individualstructures\user'] = 'Libraries/IndividualStructures/Origins/User/User.php';
$classMap['classes']['zn\individualstructures\user\userextends'] = 'Libraries/IndividualStructures/Origins/User/UserExtends.php';
$classMap['classes']['benchmark'] = 'Libraries/IndividualStructures/Statics/StaticBenchmark.php';
$classMap['classes']['buffer'] = 'Libraries/IndividualStructures/Statics/StaticBuffer.php';
$classMap['classes']['cache'] = 'Libraries/IndividualStructures/Statics/StaticCache.php';
$classMap['classes']['cart'] = 'Libraries/IndividualStructures/Statics/StaticCart.php';
$classMap['classes']['compress'] = 'Libraries/IndividualStructures/Statics/StaticCompress.php';
$classMap['classes']['is'] = 'Libraries/IndividualStructures/Statics/StaticIS.php';
$classMap['classes']['import'] = 'Libraries/IndividualStructures/Statics/StaticImport.php';
$classMap['classes']['lang'] = 'Libraries/IndividualStructures/Statics/StaticLang.php';
$classMap['classes']['output'] = 'Libraries/IndividualStructures/Statics/StaticOutput.php';
$classMap['classes']['permission'] = 'Libraries/IndividualStructures/Statics/StaticPermission.php';
$classMap['classes']['secure'] = 'Libraries/IndividualStructures/Statics/StaticSecure.php';
$classMap['classes']['security'] = 'Libraries/IndividualStructures/Statics/StaticSecurity.php';
$classMap['classes']['socialite'] = 'Libraries/IndividualStructures/Statics/StaticSocialite.php';
$classMap['classes']['support'] = 'Libraries/IndividualStructures/Statics/StaticSupport.php';
$classMap['classes']['user'] = 'Libraries/IndividualStructures/Statics/StaticUser.php';
$classMap['classes']['zn\individualstructures\benchmarkunittest'] = 'Libraries/IndividualStructures/UnitTests/BenchmarkUnitTest.php';
$classMap['classes']['zn\individualstructures\bufferunittest'] = 'Libraries/IndividualStructures/UnitTests/BufferUnitTest.php';
$classMap['classes']['zn\individualstructures\cacheunittest'] = 'Libraries/IndividualStructures/UnitTests/CacheUnitTest.php';
$classMap['classes']['zn\individualstructures\cartunittest'] = 'Libraries/IndividualStructures/UnitTests/CartUnitTest.php';
$classMap['classes']['zn\individualstructures\coalesceunittest'] = 'Libraries/IndividualStructures/UnitTests/CoalesceUnitTest.php';
$classMap['classes']['zn\individualstructures\compressunittest'] = 'Libraries/IndividualStructures/UnitTests/CompressUnitTest.php';
$classMap['classes']['zn\individualstructures\isunittest'] = 'Libraries/IndividualStructures/UnitTests/ISUnitTest.php';
$classMap['classes']['zn\individualstructures\importunittest'] = 'Libraries/IndividualStructures/UnitTests/ImportUnitTest.php';
$classMap['classes']['zn\individualstructures\langunittest'] = 'Libraries/IndividualStructures/UnitTests/LangUnitTest.php';
$classMap['classes']['zn\individualstructures\outputunittest'] = 'Libraries/IndividualStructures/UnitTests/OutputUnitTest.php';
$classMap['classes']['zn\individualstructures\permissionunittest'] = 'Libraries/IndividualStructures/UnitTests/PermissionUnitTest.php';
$classMap['classes']['zn\individualstructures\securityunittest'] = 'Libraries/IndividualStructures/UnitTests/SecurityUnitTest.php';
$classMap['classes']['zn\individualstructures\socialiteunittest'] = 'Libraries/IndividualStructures/UnitTests/SocialiteUnitTest.php';
$classMap['classes']['zn\individualstructures\supportunittest'] = 'Libraries/IndividualStructures/UnitTests/SupportUnitTest.php';
$classMap['classes']['zn\individualstructures\userunittest'] = 'Libraries/IndividualStructures/UnitTests/UserUnitTest.php';
$classMap['classes']['configurableability'] = 'Libraries/Requirements/Abilities/Configurable.php';
$classMap['classes']['conversationability'] = 'Libraries/Requirements/Abilities/Conversation.php';
$classMap['classes']['driverability'] = 'Libraries/Requirements/Abilities/Driver.php';
$classMap['classes']['zn\requirements\abilities\exception\undefinedconstexception'] = 'Libraries/Requirements/Abilities/Exception/UndefinedConstException.php';
$classMap['classes']['exclusionability'] = 'Libraries/Requirements/Abilities/Exclusion.php';
$classMap['classes']['fabricationability'] = 'Libraries/Requirements/Abilities/Fabrication.php';
$classMap['classes']['factoryability'] = 'Libraries/Requirements/Abilities/Factory.php';
$classMap['classes']['functionalizationability'] = 'Libraries/Requirements/Abilities/Functionalization.php';
$classMap['classes']['informationability'] = 'Libraries/Requirements/Abilities/Information.php';
$classMap['classes']['magicfactoryability'] = 'Libraries/Requirements/Abilities/MagicFactory.php';
$classMap['classes']['revolvingability'] = 'Libraries/Requirements/Abilities/Revolving.php';
$classMap['classes']['serializationability'] = 'Libraries/Requirements/Abilities/Serialization.php';
$classMap['classes']['singletonability'] = 'Libraries/Requirements/Abilities/Singleton.php';
$classMap['classes']['staticability'] = 'Libraries/Requirements/Abilities/Static.php';
$classMap['classes']['unittestability'] = 'Libraries/Requirements/Abilities/UnitTest.php';
$classMap['classes']['zn\requirements\controllers\basecontroller'] = 'Libraries/Requirements/Controllers/BaseController.php';
$classMap['classes']['zn\requirements\controllers\clcontroller'] = 'Libraries/Requirements/Controllers/CLController.php';
$classMap['classes']['zn\requirements\controllers\callcontroller'] = 'Libraries/Requirements/Controllers/CallController.php';
$classMap['classes']['project\controllers\controller'] = 'Libraries/Requirements/Controllers/Controller.php';
$classMap['classes']['zn\requirements\controllers\factorycontroller'] = 'Libraries/Requirements/Controllers/FactoryController.php';
$classMap['classes']['zn\requirements\controllers\unittestcontroller'] = 'Libraries/Requirements/Controllers/UnitTestController.php';
$classMap['classes']['zn\requirements\models\grandmodel'] = 'Libraries/Requirements/Models/GrandModel.php';
$classMap['classes']['zn\requirements\models\model'] = 'Libraries/Requirements/Models/Model.php';
$classMap['classes']['zn\requirements\models\relevancemodel'] = 'Libraries/Requirements/Models/RelevanceModel.php';
$classMap['classes']['zn\classes\autoloader'] = 'Libraries/Requirements/System/Autoloader.php';
$classMap['classes']['project\commands\command'] = 'Libraries/Requirements/System/Command.php';
$classMap['classes']['zn\requirements\system\commands\cleancache'] = 'Libraries/Requirements/System/Commands/CleanCache.php';
$classMap['classes']['zn\requirements\system\commands\commandlist'] = 'Libraries/Requirements/System/Commands/CommandList.php';
$classMap['classes']['zn\requirements\system\commands\controller'] = 'Libraries/Requirements/System/Commands/Controller.php';
$classMap['classes']['zn\requirements\system\commands\createcontroller'] = 'Libraries/Requirements/System/Commands/CreateController.php';
$classMap['classes']['zn\requirements\system\commands\creategrandmodel'] = 'Libraries/Requirements/System/Commands/CreateGrandModel.php';
$classMap['classes']['zn\requirements\system\commands\creategrandvision'] = 'Libraries/Requirements/System/Commands/CreateGrandVision.php';
$classMap['classes']['zn\requirements\system\commands\createmodel'] = 'Libraries/Requirements/System/Commands/CreateModel.php';
$classMap['classes']['zn\requirements\system\commands\createproject'] = 'Libraries/Requirements/System/Commands/CreateProject.php';
$classMap['classes']['zn\requirements\system\commands\cron'] = 'Libraries/Requirements/System/Commands/Cron.php';
$classMap['classes']['zn\requirements\system\commands\cronlist'] = 'Libraries/Requirements/System/Commands/CronList.php';
$classMap['classes']['zn\requirements\system\commands\deletecontroller'] = 'Libraries/Requirements/System/Commands/DeleteController.php';
$classMap['classes']['zn\requirements\system\commands\deletegrandvision'] = 'Libraries/Requirements/System/Commands/DeleteGrandVision.php';
$classMap['classes']['zn\requirements\system\commands\deletemodel'] = 'Libraries/Requirements/System/Commands/DeleteModel.php';
$classMap['classes']['zn\requirements\system\commands\deleteproject'] = 'Libraries/Requirements/System/Commands/DeleteProject.php';
$classMap['classes']['zn\requirements\system\commands\endrestoration'] = 'Libraries/Requirements/System/Commands/EndRestoration.php';
$classMap['classes']['zn\requirements\system\commands\endrestorationdelete'] = 'Libraries/Requirements/System/Commands/EndRestorationDelete.php';
$classMap['classes']['zn\requirements\system\commands\generatedatabases'] = 'Libraries/Requirements/System/Commands/GenerateDatabases.php';
$classMap['classes']['zn\requirements\system\commands\library'] = 'Libraries/Requirements/System/Commands/Library.php';
$classMap['classes']['zn\requirements\system\commands\method'] = 'Libraries/Requirements/System/Commands/Method.php';
$classMap['classes']['zn\requirements\system\commands\removecron'] = 'Libraries/Requirements/System/Commands/RemoveCron.php';
$classMap['classes']['zn\requirements\system\commands\result'] = 'Libraries/Requirements/System/Commands/Result.php';
$classMap['classes']['zn\requirements\system\commands\shortcommand'] = 'Libraries/Requirements/System/Commands/ShortCommand.php';
$classMap['classes']['zn\requirements\system\commands\startrestoration'] = 'Libraries/Requirements/System/Commands/StartRestoration.php';
$classMap['classes']['zn\requirements\system\commands\terminalcommand'] = 'Libraries/Requirements/System/Commands/TerminalCommand.php';
$classMap['classes']['zn\requirements\system\commands\upgrade'] = 'Libraries/Requirements/System/Commands/Upgrade.php';
$classMap['classes']['zn\requirements\system\commands\upgradefiles'] = 'Libraries/Requirements/System/Commands/UpgradeFiles.php';
$classMap['classes']['zn\classes\config'] = 'Libraries/Requirements/System/Config.php';
$classMap['classes']['zn\requirements\system\console'] = 'Libraries/Requirements/System/Console.php';
$classMap['classes']['external\commands\command'] = 'Libraries/Requirements/System/ExternalCommand.php';
$classMap['classes']['zn\requirements\system\factory'] = 'Libraries/Requirements/System/Factory.php';
$classMap['classes']['zn\core\htaccess'] = 'Libraries/Requirements/System/Htaccess.php';
$classMap['classes']['zn\in'] = 'Libraries/Requirements/System/In.php';
$classMap['classes']['zn\core\kernel'] = 'Libraries/Requirements/System/Kernel.php';
$classMap['classes']['project\controllers\masterpage'] = 'Libraries/Requirements/System/Masterpage.php';
$classMap['classes']['zn\requirements\system\restoration'] = 'Libraries/Requirements/System/Restoration.php';
$classMap['classes']['zn\singleton'] = 'Libraries/Requirements/System/Singleton.php';
$classMap['classes']['zn\requirements\system\staticaccess'] = 'Libraries/Requirements/System/StaticAccess.php';
$classMap['classes']['zn\core\structure'] = 'Libraries/Requirements/System/Structure.php';
$classMap['classes']['project\controllers\view'] = 'Libraries/Requirements/System/View.php';
$classMap['classes']['project\controllers\zn'] = 'Libraries/Requirements/System/ZN.php';
$classMap['classes']['project\controllers\viewtrait'] = 'Libraries/Requirements/Traits/ViewTrait.php';
$classMap['classes']['zn\services\abstracts\emailmappingabstract'] = 'Libraries/Services/Abstracts/EmailMappingAbstract.php';
$classMap['classes']['zn\services\remotecommon'] = 'Libraries/Services/Common/RemoteCommon.php';
$classMap['classes']['zn\services\exception\attachmentmissingexception'] = 'Libraries/Services/Exception/AttachmentMissingException.php';
$classMap['classes']['zn\services\exception\attachmentunreadableexception'] = 'Libraries/Services/Exception/AttachmentUnreadableException.php';
$classMap['classes']['zn\services\exception\failuresendemailexception'] = 'Libraries/Services/Exception/FailureSendEmailException.php';
$classMap['classes']['zn\services\exception\ioexception'] = 'Libraries/Services/Exception/IOException.php';
$classMap['classes']['zn\services\exception\invalidargumentexception'] = 'Libraries/Services/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\services\exception\invalidtimeformatexception'] = 'Libraries/Services/Exception/InvalidTimeFormatException.php';
$classMap['classes']['zn\services\exception\nofromexception'] = 'Libraries/Services/Exception/NoFromException.php';
$classMap['classes']['zn\services\exception\runtimeexception'] = 'Libraries/Services/Exception/RuntimeException.php';
$classMap['classes']['zn\services\exception\smtpauthexception'] = 'Libraries/Services/Exception/SMTPAuthException.php';
$classMap['classes']['zn\services\exception\smtpconnectexception'] = 'Libraries/Services/Exception/SMTPConnectException.php';
$classMap['classes']['zn\services\exception\smtpdatafailureexception'] = 'Libraries/Services/Exception/SMTPDataFailureException.php';
$classMap['classes']['zn\services\exception\smtpemptyhostnameexception'] = 'Libraries/Services/Exception/SMTPEmptyHostNameException.php';
$classMap['classes']['zn\services\exception\smtpemptyuserpasswordexception'] = 'Libraries/Services/Exception/SMTPEmptyUserPasswordException.php';
$classMap['classes']['zn\services\exception\smtpfailedloginexception'] = 'Libraries/Services/Exception/SMTPFailedLoginException.php';
$classMap['classes']['zn\services\exception\setcookieexception'] = 'Libraries/Services/Exception/SetcookieException.php';
$classMap['classes']['zn\services\exception\socketexception'] = 'Libraries/Services/Exception/SocketException.php';
$classMap['classes']['zn\services\curlinterface'] = 'Libraries/Services/Interfaces/CURLInterface.php';
$classMap['classes']['zn\services\cookieinterface'] = 'Libraries/Services/Interfaces/CookieInterface.php';
$classMap['classes']['zn\services\crontabinterface'] = 'Libraries/Services/Interfaces/CrontabInterface.php';
$classMap['classes']['zn\services\crontabintervalinterface'] = 'Libraries/Services/Interfaces/CrontabIntervalInterface.php';
$classMap['classes']['zn\services\emailinterface'] = 'Libraries/Services/Interfaces/EmailInterface.php';
$classMap['classes']['zn\services\httpinterface'] = 'Libraries/Services/Interfaces/HTTPInterface.php';
$classMap['classes']['zn\services\methodinterface'] = 'Libraries/Services/Interfaces/MethodInterface.php';
$classMap['classes']['zn\services\netinterface'] = 'Libraries/Services/Interfaces/NetInterface.php';
$classMap['classes']['zn\services\processorinterface'] = 'Libraries/Services/Interfaces/ProcessorInterface.php';
$classMap['classes']['zn\services\redirectinterface'] = 'Libraries/Services/Interfaces/RedirectInterface.php';
$classMap['classes']['zn\services\remotecommoninterface'] = 'Libraries/Services/Interfaces/RemoteCommonInterface.php';
$classMap['classes']['zn\services\requestinterface'] = 'Libraries/Services/Interfaces/RequestInterface.php';
$classMap['classes']['zn\services\restfulinterface'] = 'Libraries/Services/Interfaces/RestfulInterface.php';
$classMap['classes']['zn\services\routeinterface'] = 'Libraries/Services/Interfaces/RouteInterface.php';
$classMap['classes']['zn\services\sshinterface'] = 'Libraries/Services/Interfaces/SSHInterface.php';
$classMap['classes']['zn\services\serverinterface'] = 'Libraries/Services/Interfaces/ServerInterface.php';
$classMap['classes']['zn\services\sessioncookiecommoninterface'] = 'Libraries/Services/Interfaces/SessionCookieCommonInterface.php';
$classMap['classes']['zn\services\sessioninterface'] = 'Libraries/Services/Interfaces/SessionInterface.php';
$classMap['classes']['zn\services\uriinterface'] = 'Libraries/Services/Interfaces/URIInterface.php';
$classMap['classes']['zn\services\urlinterface'] = 'Libraries/Services/Interfaces/URLInterface.php';
$classMap['classes']['zn\services\curl'] = 'Libraries/Services/Origins/CURL.php';
$classMap['classes']['zn\services\cookie'] = 'Libraries/Services/Origins/Cookie.php';
$classMap['classes']['zn\services\crontab'] = 'Libraries/Services/Origins/Crontab.php';
$classMap['classes']['zn\services\email\drivers\imapdriver'] = 'Libraries/Services/Origins/Email/Drivers/Imap.php';
$classMap['classes']['zn\services\email\drivers\maildriver'] = 'Libraries/Services/Origins/Email/Drivers/Mail.php';
$classMap['classes']['zn\services\email\drivers\pipedriver'] = 'Libraries/Services/Origins/Email/Drivers/Pipe.php';
$classMap['classes']['zn\services\email\drivers\smtpdriver'] = 'Libraries/Services/Origins/Email/Drivers/SMTP.php';
$classMap['classes']['zn\services\email\drivers\senddriver'] = 'Libraries/Services/Origins/Email/Drivers/Send.php';
$classMap['classes']['zn\services\email'] = 'Libraries/Services/Origins/Email/Email.php';
$classMap['classes']['zn\services\env'] = 'Libraries/Services/Origins/Env.php';
$classMap['classes']['zn\services\get'] = 'Libraries/Services/Origins/Get.php';
$classMap['classes']['zn\services\http'] = 'Libraries/Services/Origins/HTTP.php';
$classMap['classes']['zn\services\method'] = 'Libraries/Services/Origins/Method.php';
$classMap['classes']['zn\services\net'] = 'Libraries/Services/Origins/Net.php';
$classMap['classes']['zn\services\post'] = 'Libraries/Services/Origins/Post.php';
$classMap['classes']['zn\services\processor'] = 'Libraries/Services/Origins/Processor.php';
$classMap['classes']['zn\services\redirect'] = 'Libraries/Services/Origins/Redirect.php';
$classMap['classes']['zn\services\request'] = 'Libraries/Services/Origins/Request.php';
$classMap['classes']['zn\services\restful'] = 'Libraries/Services/Origins/Restful.php';
$classMap['classes']['zn\services\route'] = 'Libraries/Services/Origins/Route.php';
$classMap['classes']['zn\services\ssh'] = 'Libraries/Services/Origins/SSH.php';
$classMap['classes']['zn\services\server'] = 'Libraries/Services/Origins/Server.php';
$classMap['classes']['zn\services\session'] = 'Libraries/Services/Origins/Session.php';
$classMap['classes']['zn\services\uri'] = 'Libraries/Services/Origins/URI.php';
$classMap['classes']['zn\services\url'] = 'Libraries/Services/Origins/URL.php';
$classMap['classes']['curl'] = 'Libraries/Services/Statics/StaticCURL.php';
$classMap['classes']['cookie'] = 'Libraries/Services/Statics/StaticCookie.php';
$classMap['classes']['crontab'] = 'Libraries/Services/Statics/StaticCrontab.php';
$classMap['classes']['email'] = 'Libraries/Services/Statics/StaticEmail.php';
$classMap['classes']['env'] = 'Libraries/Services/Statics/StaticEnv.php';
$classMap['classes']['get'] = 'Libraries/Services/Statics/StaticGet.php';
$classMap['classes']['http'] = 'Libraries/Services/Statics/StaticHTTP.php';
$classMap['classes']['method'] = 'Libraries/Services/Statics/StaticMethod.php';
$classMap['classes']['net'] = 'Libraries/Services/Statics/StaticNet.php';
$classMap['classes']['post'] = 'Libraries/Services/Statics/StaticPost.php';
$classMap['classes']['processor'] = 'Libraries/Services/Statics/StaticProcessor.php';
$classMap['classes']['redirect'] = 'Libraries/Services/Statics/StaticRedirect.php';
$classMap['classes']['request'] = 'Libraries/Services/Statics/StaticRequest.php';
$classMap['classes']['restful'] = 'Libraries/Services/Statics/StaticRestful.php';
$classMap['classes']['route'] = 'Libraries/Services/Statics/StaticRoute.php';
$classMap['classes']['ssh'] = 'Libraries/Services/Statics/StaticSSH.php';
$classMap['classes']['server'] = 'Libraries/Services/Statics/StaticServer.php';
$classMap['classes']['session'] = 'Libraries/Services/Statics/StaticSession.php';
$classMap['classes']['uri'] = 'Libraries/Services/Statics/StaticURI.php';
$classMap['classes']['url'] = 'Libraries/Services/Statics/StaticURL.php';
$classMap['classes']['zn\services\crontabintervaltrait'] = 'Libraries/Services/Traits/CrontabIntervalTrait.php';
$classMap['classes']['zn\services\sessioncookiecommontrait'] = 'Libraries/Services/Traits/SessionCookieCommonTrait.php';
$classMap['classes']['zn\services\curlunittest'] = 'Libraries/Services/UnitTests/CURLUnitTest.php';
$classMap['classes']['zn\services\cookieunittest'] = 'Libraries/Services/UnitTests/CookieUnitTest.php';
$classMap['classes']['zn\services\crontabunittest'] = 'Libraries/Services/UnitTests/CrontabUnitTest.php';
$classMap['classes']['zn\services\emailunittest'] = 'Libraries/Services/UnitTests/EmailUnitTest.php';
$classMap['classes']['zn\services\httpunittest'] = 'Libraries/Services/UnitTests/HTTPUnitTest.php';
$classMap['classes']['zn\services\methodunittest'] = 'Libraries/Services/UnitTests/MethodUnitTest.php';
$classMap['classes']['zn\services\netunittest'] = 'Libraries/Services/UnitTests/NetUnitTest.php';
$classMap['classes']['zn\services\processorunittest'] = 'Libraries/Services/UnitTests/ProcessorUnitTest.php';
$classMap['classes']['zn\services\redirectunittest'] = 'Libraries/Services/UnitTests/RedirectUnitTest.php';
$classMap['classes']['zn\services\requestunittest'] = 'Libraries/Services/UnitTests/RequestUnitTest.php';
$classMap['classes']['zn\services\restfulunittest'] = 'Libraries/Services/UnitTests/RestfulUnitTest.php';
$classMap['classes']['zn\services\routeunittest'] = 'Libraries/Services/UnitTests/RouteUnitTest.php';
$classMap['classes']['zn\services\sshunittest'] = 'Libraries/Services/UnitTests/SSHUnitTest.php';
$classMap['classes']['zn\services\serverunittest'] = 'Libraries/Services/UnitTests/ServerUnitTest.php';
$classMap['classes']['zn\services\sessionunittest'] = 'Libraries/Services/UnitTests/SessionUnitTest.php';
$classMap['classes']['zn\services\uriunittest'] = 'Libraries/Services/UnitTests/URIUnitTest.php';
$classMap['classes']['zn\services\urlunittest'] = 'Libraries/Services/UnitTests/URLUnitTest.php';
$classMap['classes']['zn\viewobjects\abstracts\gridabstract'] = 'Libraries/ViewObjects/Abstracts/GridAbstract.php';
$classMap['classes']['zn\viewobjects\abstracts\htmlhelpersabstract'] = 'Libraries/ViewObjects/Abstracts/HTMLHelpersAbstract.php';
$classMap['classes']['zn\viewobjects\exception\databaseerrorexception'] = 'Libraries/ViewObjects/Exception/DatabaseErrorException.php';
$classMap['classes']['zn\viewobjects\exception\invalidargumentexception'] = 'Libraries/ViewObjects/Exception/InvalidArgumentException.php';
$classMap['classes']['zn\viewobjects\exception\nosearchexception'] = 'Libraries/ViewObjects/Exception/NoSearchException.php';
$classMap['classes']['zn\viewobjects\exception\notableexception'] = 'Libraries/ViewObjects/Exception/NoTableException.php';
$classMap['classes']['zn\viewobjects\exception\permissionroleidexception'] = 'Libraries/ViewObjects/Exception/PermissionRoleIdException.php';
$classMap['classes']['zn\viewobjects\cdninterface'] = 'Libraries/ViewObjects/Interfaces/CDNInterface.php';
$classMap['classes']['zn\viewobjects\calendarinterface'] = 'Libraries/ViewObjects/Interfaces/CalendarInterface.php';
$classMap['classes']['zn\viewobjects\captchainterface'] = 'Libraries/ViewObjects/Interfaces/CaptchaInterface.php';
$classMap['classes']['zn\viewobjects\paginationinterface'] = 'Libraries/ViewObjects/Interfaces/PaginationInterface.php';
$classMap['classes']['zn\viewobjects\styleinterface'] = 'Libraries/ViewObjects/Interfaces/StyleInterface.php';
$classMap['classes']['zn\viewobjects\validateinterface'] = 'Libraries/ViewObjects/Interfaces/Validation/ValidateInterface.php';
$classMap['classes']['zn\viewobjects\validationinterface'] = 'Libraries/ViewObjects/Interfaces/Validation/ValidationInterface.php';
$classMap['classes']['zn\viewobjects\validatorinterface'] = 'Libraries/ViewObjects/Interfaces/Validation/ValidatorInterface.php';
$classMap['classes']['zn\viewobjects\cdn'] = 'Libraries/ViewObjects/Origins/CDN.php';
$classMap['classes']['zn\viewobjects\calendar'] = 'Libraries/ViewObjects/Origins/Calendar.php';
$classMap['classes']['zn\viewobjects\captcha'] = 'Libraries/ViewObjects/Origins/Captcha.php';
$classMap['classes']['zn\viewobjects\form'] = 'Libraries/ViewObjects/Origins/Form.php';
$classMap['classes']['zn\viewobjects\dbgrid'] = 'Libraries/ViewObjects/Origins/Grids/DBGrid.php';
$classMap['classes']['zn\viewobjects\mlgrid'] = 'Libraries/ViewObjects/Origins/Grids/MLGrid.php';
$classMap['classes']['zn\viewobjects\html'] = 'Libraries/ViewObjects/Origins/HTML/HTML.php';
$classMap['classes']['zn\viewobjects\html\helpers\lists'] = 'Libraries/ViewObjects/Origins/HTML/Helpers/List.php';
$classMap['classes']['zn\viewobjects\html\helpers\table'] = 'Libraries/ViewObjects/Origins/HTML/Helpers/Table.php';
$classMap['classes']['zn\viewobjects\javascript\components\aceeditor'] = 'Libraries/ViewObjects/Origins/Javascript/Components/AceEditor/AceEditor.php';
$classMap['classes']['zn\viewobjects\javascript\components\ajax'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Ajax/Ajax.php';
$classMap['classes']['zn\viewobjects\javascript\components\charts'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Charts/Charts.php';
$classMap['classes']['zn\viewobjects\javascript\components\componentsextends'] = 'Libraries/ViewObjects/Origins/Javascript/Components/ComponentsExtends.php';
$classMap['classes']['zn\viewobjects\javascript\components\datatables'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Datatables/Datatables.php';
$classMap['classes']['zn\viewobjects\javascript\components\datepicker'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Datepicker/Datepicker.php';
$classMap['classes']['$class'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Select2/View.php';
$classMap['classes']['zn\viewobjects\javascript\components\dropdown'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Dropdown/Dropdown.php';
$classMap['classes']['zn\viewobjects\javascript\components\flexslider'] = 'Libraries/ViewObjects/Origins/Javascript/Components/FlexSlider/FlexSlider.php';
$classMap['classes']['zn\viewobjects\javascript\components\form'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Form/Form.php';
$classMap['classes']['zn\viewobjects\javascript\components\gridsystem'] = 'Libraries/ViewObjects/Origins/Javascript/Components/GridSystem/GridSystem.php';
$classMap['classes']['zn\viewobjects\javascript\components\modal'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Modal/Modal.php';
$classMap['classes']['zn\viewobjects\javascript\components\pagination'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Pagination/Pagination.php';
$classMap['classes']['zn\viewobjects\javascript\components\select2'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Select2/Select2.php';
$classMap['classes']['zn\viewobjects\javascript\components\tabs'] = 'Libraries/ViewObjects/Origins/Javascript/Components/Tabs/Tabs.php';
$classMap['classes']['zn\viewobjects\javascript\components\tinymceeditor'] = 'Libraries/ViewObjects/Origins/Javascript/Components/TinymceEditor/TinymceEditor.php';
$classMap['classes']['zn\viewobjects\jc'] = 'Libraries/ViewObjects/Origins/Javascript/JC.php';
$classMap['classes']['zn\viewobjects\pagination'] = 'Libraries/ViewObjects/Origins/Pagination.php';
$classMap['classes']['zn\viewobjects\sheet'] = 'Libraries/ViewObjects/Origins/Sheet.php';
$classMap['classes']['zn\viewobjects\style'] = 'Libraries/ViewObjects/Origins/Style.php';
$classMap['classes']['zn\viewobjects\templatewizard'] = 'Libraries/ViewObjects/Origins/TemplateWizard/TemplateWizard.php';
$classMap['classes']['project\controllers\theme'] = 'Libraries/ViewObjects/Origins/TemplateWizard/Theme.php';
$classMap['classes']['zn\viewobjects\wizard'] = 'Libraries/ViewObjects/Origins/TemplateWizard/Wizard.php';
$classMap['classes']['zn\viewobjects\validate'] = 'Libraries/ViewObjects/Origins/Validation/Validate.php';
$classMap['classes']['zn\viewobjects\validation'] = 'Libraries/ViewObjects/Origins/Validation/Validation.php';
$classMap['classes']['zn\viewobjects\validator'] = 'Libraries/ViewObjects/Origins/Validation/Validator.php';
$classMap['classes']['calendar'] = 'Libraries/ViewObjects/Statics/StaticCalendar.php';
$classMap['classes']['captcha'] = 'Libraries/ViewObjects/Statics/StaticCaptcha.php';
$classMap['classes']['dbgrid'] = 'Libraries/ViewObjects/Statics/StaticDBGrid.php';
$classMap['classes']['form'] = 'Libraries/ViewObjects/Statics/StaticForm.php';
$classMap['classes']['html'] = 'Libraries/ViewObjects/Statics/StaticHTML.php';
$classMap['classes']['jc'] = 'Libraries/ViewObjects/Statics/StaticJC.php';
$classMap['classes']['mlgrid'] = 'Libraries/ViewObjects/Statics/StaticMLGrid.php';
$classMap['classes']['pagination'] = 'Libraries/ViewObjects/Statics/StaticPagination.php';
$classMap['classes']['sheet'] = 'Libraries/ViewObjects/Statics/StaticSheet.php';
$classMap['classes']['style'] = 'Libraries/ViewObjects/Statics/StaticStyle.php';
$classMap['classes']['validate'] = 'Libraries/ViewObjects/Statics/StaticValidate.php';
$classMap['classes']['validation'] = 'Libraries/ViewObjects/Statics/StaticValidation.php';
$classMap['classes']['validator'] = 'Libraries/ViewObjects/Statics/StaticValidator.php';
$classMap['classes']['wizard'] = 'Libraries/ViewObjects/Statics/StaticWizard.php';
$classMap['classes']['zn\viewobjects\formelementstrait'] = 'Libraries/ViewObjects/Traits/FormElementsTrait.php';
$classMap['classes']['zn\viewobjects\htmlelementstrait'] = 'Libraries/ViewObjects/Traits/HTMLElementsTrait.php';
$classMap['classes']['zn\viewobjects\validationpropertiestrait'] = 'Libraries/ViewObjects/Traits/ValidationPropertiesTrait.php';
$classMap['classes']['zn\viewobjects\viewcommontrait'] = 'Libraries/ViewObjects/Traits/ViewCommonTrait.php';
$classMap['classes']['zn\viewobjects\cdnunittest'] = 'Libraries/ViewObjects/UnitTests/CDNUnitTest.php';
$classMap['classes']['zn\viewobjects\calendarunittest'] = 'Libraries/ViewObjects/UnitTests/CalendarUnitTest.php';
$classMap['classes']['zn\viewobjects\captchaunittest'] = 'Libraries/ViewObjects/UnitTests/CaptchaUnitTest.php';
$classMap['classes']['zn\viewobjects\dbgridunittest'] = 'Libraries/ViewObjects/UnitTests/DBGridUnitTest.php';
$classMap['classes']['zn\viewobjects\formunittest'] = 'Libraries/ViewObjects/UnitTests/FormUnitTest.php';
$classMap['classes']['zn\viewobjects\htmlunittest'] = 'Libraries/ViewObjects/UnitTests/HTMLUnitTest.php';
$classMap['classes']['zn\viewobjects\mlgridunittest'] = 'Libraries/ViewObjects/UnitTests/MLGridUnitTest.php';
$classMap['classes']['zn\viewobjects\paginationunittest'] = 'Libraries/ViewObjects/UnitTests/PaginationUnitTest.php';
$classMap['classes']['zn\viewobjects\sheetunittest'] = 'Libraries/ViewObjects/UnitTests/SheetUnitTest.php';
$classMap['classes']['zn\viewobjects\styleunittest'] = 'Libraries/ViewObjects/UnitTests/StyleUnitTest.php';
$classMap['classes']['zn\viewobjects\templatewizardunittest'] = 'Libraries/ViewObjects/UnitTests/TemplateWizardUnitTest.php';
$classMap['classes']['zn\viewobjects\validateunittest'] = 'Libraries/ViewObjects/UnitTests/ValidateUnitTest.php';
$classMap['classes']['zn\viewobjects\validationunittest'] = 'Libraries/ViewObjects/UnitTests/ValidationUnitTest.php';
$classMap['classes']['zn\viewobjects\validatorunittest'] = 'Libraries/ViewObjects/UnitTests/ValidatorUnitTest.php';
$classMap['classes']['project\commands\example'] = 'Commands/Example.php';
$classMap['namespaces']['zn\cryptography\drivers\hashdriver'] = 'hashdriver';
$classMap['namespaces']['zn\cryptography\drivers\mcryptdriver'] = 'mcryptdriver';
$classMap['namespaces']['zn\cryptography\drivers\mhashdriver'] = 'mhashdriver';
$classMap['namespaces']['zn\cryptography\drivers\openssldriver'] = 'openssldriver';
$classMap['namespaces']['zn\cryptography\drivers\phashdriver'] = 'phashdriver';
$classMap['namespaces']['zn\cryptography\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\cryptography\exception\invalidversionexception'] = 'invalidversionexception';
$classMap['namespaces']['zn\cryptography\exception\unsupportedextensionexception'] = 'unsupportedextensionexception';
$classMap['namespaces']['zn\cryptography\cryptointerface'] = 'cryptointerface';
$classMap['namespaces']['zn\cryptography\cryptomapping'] = 'cryptomapping';
$classMap['namespaces']['zn\cryptography\crypto'] = 'crypto';
$classMap['namespaces']['zn\cryptography\encode'] = 'encode';
$classMap['namespaces']['zn\cryptography\encode\encodeextends'] = 'encodeextends';
$classMap['namespaces']['zn\cryptography\encode\goldenalgorithm'] = 'goldenalgorithm';
$classMap['namespaces']['zn\cryptography\encode\randompassword'] = 'randompassword';
$classMap['namespaces']['zn\cryptography\encode\superalgorithm'] = 'superalgorithm';
$classMap['namespaces']['zn\cryptography\encode\type'] = 'type';
$classMap['namespaces']['zn\cryptography\cryptounittest'] = 'cryptounittest';
$classMap['namespaces']['zn\cryptography\encodeunittest'] = 'encodeunittest';
$classMap['namespaces']['zn\datatypes\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\datatypes\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\datatypes\exception\logicexception'] = 'logicexception';
$classMap['namespaces']['zn\datatypes\classesinterface'] = 'classesinterface';
$classMap['namespaces']['zn\datatypes\filtersinterface'] = 'filtersinterface';
$classMap['namespaces']['zn\datatypes\functionsinterface'] = 'functionsinterface';
$classMap['namespaces']['zn\datatypes\regexinterface'] = 'regexinterface';
$classMap['namespaces']['zn\datatypes\serialinterface'] = 'serialinterface';
$classMap['namespaces']['zn\datatypes\varsinterface'] = 'varsinterface';
$classMap['namespaces']['zn\datatypes\arrays\addelement'] = 'addelement';
$classMap['namespaces']['zn\datatypes\arrays'] = 'arrays';
$classMap['namespaces']['zn\datatypes\arrays\casing'] = 'casing';
$classMap['namespaces']['zn\datatypes\collection'] = 'collection';
$classMap['namespaces']['zn\datatypes\arrays\each'] = 'each';
$classMap['namespaces']['zn\datatypes\arrays\element'] = 'element';
$classMap['namespaces']['zn\datatypes\arrays\excluding'] = 'excluding';
$classMap['namespaces']['zn\datatypes\arrays\exists'] = 'exists';
$classMap['namespaces']['zn\datatypes\arrays\force'] = 'force';
$classMap['namespaces']['zn\datatypes\arrays\getelement'] = 'getelement';
$classMap['namespaces']['zn\datatypes\arrays\including'] = 'including';
$classMap['namespaces']['zn\datatypes\arrays\removeelement'] = 'removeelement';
$classMap['namespaces']['zn\datatypes\arrays\sort'] = 'sort';
$classMap['namespaces']['zn\datatypes\arrays\unidimensional'] = 'unidimensional';
$classMap['namespaces']['zn\datatypes\chars'] = 'chars';
$classMap['namespaces']['zn\datatypes\classes'] = 'classes';
$classMap['namespaces']['zn\datatypes\filters'] = 'filters';
$classMap['namespaces']['zn\datatypes\functions'] = 'functions';
$classMap['namespaces']['zn\datatypes\json\decode'] = 'decode';
$classMap['namespaces']['zn\datatypes\json\encode'] = 'encode';
$classMap['namespaces']['zn\datatypes\json\errorinfo'] = 'errorinfo';
$classMap['namespaces']['zn\datatypes\json'] = 'json';
$classMap['namespaces']['zn\datatypes\objects'] = 'objects';
$classMap['namespaces']['zn\datatypes\regex'] = 'regex';
$classMap['namespaces']['zn\datatypes\separator\decode'] = 'decode';
$classMap['namespaces']['zn\datatypes\separator\encode'] = 'encode';
$classMap['namespaces']['zn\datatypes\separator'] = 'separator';
$classMap['namespaces']['zn\datatypes\separator\separatorextends'] = 'separatorextends';
$classMap['namespaces']['zn\datatypes\serial'] = 'serial';
$classMap['namespaces']['zn\datatypes\strings\casing'] = 'casing';
$classMap['namespaces']['zn\datatypes\strings\element'] = 'element';
$classMap['namespaces']['zn\datatypes\strings\search'] = 'search';
$classMap['namespaces']['zn\datatypes\strings\section'] = 'section';
$classMap['namespaces']['zn\datatypes\strings\security'] = 'security';
$classMap['namespaces']['zn\datatypes\strings\split'] = 'split';
$classMap['namespaces']['zn\datatypes\stack'] = 'stack';
$classMap['namespaces']['zn\datatypes\strings'] = 'strings';
$classMap['namespaces']['zn\datatypes\strings\substitution'] = 'substitution';
$classMap['namespaces']['zn\datatypes\strings\trim'] = 'trim';
$classMap['namespaces']['zn\datatypes\vars'] = 'vars';
$classMap['namespaces']['zn\datatypes\xml\builder'] = 'builder';
$classMap['namespaces']['zn\datatypes\xml\check'] = 'check';
$classMap['namespaces']['zn\datatypes\xml\loader'] = 'loader';
$classMap['namespaces']['zn\datatypes\xml\parser'] = 'parser';
$classMap['namespaces']['zn\datatypes\xml\save'] = 'save';
$classMap['namespaces']['zn\datatypes\xml'] = 'xml';
$classMap['namespaces']['zn\datatypes\arraysunittest'] = 'arraysunittest';
$classMap['namespaces']['zn\datatypes\charsunittest'] = 'charsunittest';
$classMap['namespaces']['zn\datatypes\classesunittest'] = 'classesunittest';
$classMap['namespaces']['zn\datatypes\filtersunittest'] = 'filtersunittest';
$classMap['namespaces']['zn\datatypes\functionsunittest'] = 'functionsunittest';
$classMap['namespaces']['zn\datatypes\jsonunittest'] = 'jsonunittest';
$classMap['namespaces']['zn\datatypes\regexunittest'] = 'regexunittest';
$classMap['namespaces']['zn\datatypes\separatorunittest'] = 'separatorunittest';
$classMap['namespaces']['zn\datatypes\serialunittest'] = 'serialunittest';
$classMap['namespaces']['zn\datatypes\stringsunittest'] = 'stringsunittest';
$classMap['namespaces']['zn\datatypes\varsunittest'] = 'varsunittest';
$classMap['namespaces']['zn\datatypes\xmlunittest'] = 'xmlunittest';
$classMap['namespaces']['zn\database\abstracts\driverconnectionmappingabstract'] = 'driverconnectionmappingabstract';
$classMap['namespaces']['zn\database\drivers\mysqlidriver'] = 'mysqlidriver';
$classMap['namespaces']['zn\database\drivers\mysqliforge'] = 'mysqliforge';
$classMap['namespaces']['zn\database\drivers\mysqlitool'] = 'mysqlitool';
$classMap['namespaces']['zn\database\drivers\mysqlitrigger'] = 'mysqlitrigger';
$classMap['namespaces']['zn\database\drivers\mysqliuser'] = 'mysqliuser';
$classMap['namespaces']['zn\database\drivers\odbcdriver'] = 'odbcdriver';
$classMap['namespaces']['zn\database\drivers\odbcforge'] = 'odbcforge';
$classMap['namespaces']['zn\database\drivers\odbctool'] = 'odbctool';
$classMap['namespaces']['zn\database\drivers\odbctrigger'] = 'odbctrigger';
$classMap['namespaces']['zn\database\drivers\odbcuser'] = 'odbcuser';
$classMap['namespaces']['zn\database\drivers\oracledriver'] = 'oracledriver';
$classMap['namespaces']['zn\database\drivers\oracleforge'] = 'oracleforge';
$classMap['namespaces']['zn\database\drivers\oracletool'] = 'oracletool';
$classMap['namespaces']['zn\database\drivers\oracletrigger'] = 'oracletrigger';
$classMap['namespaces']['zn\database\drivers\oracleuser'] = 'oracleuser';
$classMap['namespaces']['zn\database\drivers\pdodriver'] = 'pdodriver';
$classMap['namespaces']['zn\database\drivers\pdoforge'] = 'pdoforge';
$classMap['namespaces']['zn\database\drivers\pdotool'] = 'pdotool';
$classMap['namespaces']['zn\database\drivers\pdotrigger'] = 'pdotrigger';
$classMap['namespaces']['zn\database\drivers\pdouser'] = 'pdouser';
$classMap['namespaces']['zn\database\drivers\postgresdriver'] = 'postgresdriver';
$classMap['namespaces']['zn\database\drivers\postgresforge'] = 'postgresforge';
$classMap['namespaces']['zn\database\drivers\postgrestool'] = 'postgrestool';
$classMap['namespaces']['zn\database\drivers\postgrestrigger'] = 'postgrestrigger';
$classMap['namespaces']['zn\database\drivers\postgresuser'] = 'postgresuser';
$classMap['namespaces']['zn\database\drivers\sqlserverforge'] = 'sqlserverforge';
$classMap['namespaces']['zn\database\drivers\sqlservertool'] = 'sqlservertool';
$classMap['namespaces']['zn\database\drivers\sqlservertrigger'] = 'sqlservertrigger';
$classMap['namespaces']['zn\database\drivers\sqlserveruser'] = 'sqlserveruser';
$classMap['namespaces']['zn\database\drivers\sqlserverdriver'] = 'sqlserverdriver';
$classMap['namespaces']['zn\database\drivers\sqlitedriver'] = 'sqlitedriver';
$classMap['namespaces']['zn\database\drivers\sqliteforge'] = 'sqliteforge';
$classMap['namespaces']['zn\database\drivers\sqlitetool'] = 'sqlitetool';
$classMap['namespaces']['zn\database\drivers\sqlitetrigger'] = 'sqlitetrigger';
$classMap['namespaces']['zn\database\drivers\sqliteuser'] = 'sqliteuser';
$classMap['namespaces']['zn\database\exception\connectionerrorexception'] = 'connectionerrorexception';
$classMap['namespaces']['zn\database\exception\databaseerrorexception'] = 'databaseerrorexception';
$classMap['namespaces']['zn\database\exception\duplicatecheckexception'] = 'duplicatecheckexception';
$classMap['namespaces']['zn\database\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\database\exception\unconditionaldeleteexception'] = 'unconditionaldeleteexception';
$classMap['namespaces']['zn\database\connection'] = 'connection';
$classMap['namespaces']['zn\database\driverextends'] = 'driverextends';
$classMap['namespaces']['zn\database\driverforge'] = 'driverforge';
$classMap['namespaces']['zn\database\drivertool'] = 'drivertool';
$classMap['namespaces']['zn\database\drivertrigger'] = 'drivertrigger';
$classMap['namespaces']['zn\database\driveruser'] = 'driveruser';
$classMap['namespaces']['zn\database\migrationinterface'] = 'migrationinterface';
$classMap['namespaces']['zn\database\db'] = 'db';
$classMap['namespaces']['zn\database\dbforge'] = 'dbforge';
$classMap['namespaces']['zn\database\dbtool'] = 'dbtool';
$classMap['namespaces']['zn\database\dbtrigger'] = 'dbtrigger';
$classMap['namespaces']['zn\database\dbuser'] = 'dbuser';
$classMap['namespaces']['zn\database\internalmigration'] = 'internalmigration';
$classMap['namespaces']['zn\database\properties'] = 'properties';
$classMap['namespaces']['zn\database\dbforgeunittest'] = 'dbforgeunittest';
$classMap['namespaces']['zn\database\dbtoolunittest'] = 'dbtoolunittest';
$classMap['namespaces']['zn\database\dbtriggerunittest'] = 'dbtriggerunittest';
$classMap['namespaces']['zn\database\dbunittest'] = 'dbunittest';
$classMap['namespaces']['zn\database\dbuserunittest'] = 'dbuserunittest';
$classMap['namespaces']['zn\database\migrationunittest'] = 'migrationunittest';
$classMap['namespaces']['zn\datetime\datetimecommon'] = 'datetimecommon';
$classMap['namespaces']['zn\datetime\datetimecommoninterface'] = 'datetimecommoninterface';
$classMap['namespaces']['zn\datetime\date'] = 'date';
$classMap['namespaces']['zn\datetime\datetimeinterval'] = 'datetimeinterval';
$classMap['namespaces']['zn\datetime\time'] = 'time';
$classMap['namespaces']['zn\datetime\properties'] = 'properties';
$classMap['namespaces']['zn\datetime\carbon\carbon'] = 'carbon';
$classMap['namespaces']['zn\datetime\carbon\carboninterval'] = 'carboninterval';
$classMap['namespaces']['zn\datetime\carbon\exceptions\invaliddateexception'] = 'invaliddateexception';
$classMap['namespaces']['symfony\component\translation\interval'] = 'interval';
$classMap['namespaces']['symfony\component\translation\loader\arrayloader'] = 'arrayloader';
$classMap['namespaces']['symfony\component\translation\loader\loaderinterface'] = 'loaderinterface';
$classMap['namespaces']['symfony\component\translation\messagecatalogue'] = 'messagecatalogue';
$classMap['namespaces']['symfony\component\translation\messagecatalogueinterface'] = 'messagecatalogueinterface';
$classMap['namespaces']['symfony\component\translation\messageselector'] = 'messageselector';
$classMap['namespaces']['symfony\component\translation\metadataawareinterface'] = 'metadataawareinterface';
$classMap['namespaces']['symfony\component\translation\pluralizationrules'] = 'pluralizationrules';
$classMap['namespaces']['symfony\component\translation\translator'] = 'translator';
$classMap['namespaces']['symfony\component\translation\translatorbaginterface'] = 'translatorbaginterface';
$classMap['namespaces']['symfony\component\translation\translatorinterface'] = 'translatorinterface';
$classMap['namespaces']['zn\datetime\dateunittest'] = 'dateunittest';
$classMap['namespaces']['zn\datetime\timeunittest'] = 'timeunittest';
$classMap['namespaces']['zn\encodingsupport\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\encodingsupport\ivinterface'] = 'ivinterface';
$classMap['namespaces']['zn\encodingsupport\mbinterface'] = 'mbinterface';
$classMap['namespaces']['zn\encodingsupport\iv'] = 'iv';
$classMap['namespaces']['zn\encodingsupport\mb'] = 'mb';
$classMap['namespaces']['zn\encodingsupport\multilanguage\delete'] = 'delete';
$classMap['namespaces']['zn\encodingsupport\multilanguage\grid'] = 'grid';
$classMap['namespaces']['zn\encodingsupport\multilanguage\insert'] = 'insert';
$classMap['namespaces']['zn\encodingsupport\ml'] = 'ml';
$classMap['namespaces']['zn\encodingsupport\multilanguage\mlextends'] = 'mlextends';
$classMap['namespaces']['zn\encodingsupport\multilanguage\select'] = 'select';
$classMap['namespaces']['zn\encodingsupport\multilanguage\update'] = 'update';
$classMap['namespaces']['zn\encodingsupport\ivunittest'] = 'ivunittest';
$classMap['namespaces']['zn\encodingsupport\mbunittest'] = 'mbunittest';
$classMap['namespaces']['zn\encodingsupport\mlunittest'] = 'mlunittest';
$classMap['namespaces']['zn\errorhandling\errors'] = 'errors';
$classMap['namespaces']['zn\errorhandling\exceptions'] = 'exceptions';
$classMap['namespaces']['zn\errorhandling\exceptionsinterface'] = 'exceptionsinterface';
$classMap['namespaces']['zn\filesystem\exception\fileallreadyexception'] = 'fileallreadyexception';
$classMap['namespaces']['zn\filesystem\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\filesystem\exception\fileremotedownloadexception'] = 'fileremotedownloadexception';
$classMap['namespaces']['zn\filesystem\exception\fileremoteuploadexception'] = 'fileremoteuploadexception';
$classMap['namespaces']['zn\filesystem\exception\folderallreadyexception'] = 'folderallreadyexception';
$classMap['namespaces']['zn\filesystem\exception\folderchangedirexception'] = 'folderchangedirexception';
$classMap['namespaces']['zn\filesystem\exception\folderchangenameexception'] = 'folderchangenameexception';
$classMap['namespaces']['zn\filesystem\exception\foldernotfoundexception'] = 'foldernotfoundexception';
$classMap['namespaces']['zn\filesystem\exception\ioexception'] = 'ioexception';
$classMap['namespaces']['zn\filesystem\exception\undefinedfunctionexception'] = 'undefinedfunctionexception';
$classMap['namespaces']['zn\filesystem\document\documentinterface'] = 'documentinterface';
$classMap['namespaces']['zn\filesystem\generateinterface'] = 'generateinterface';
$classMap['namespaces']['zn\filesystem\uploadinterface'] = 'uploadinterface';
$classMap['namespaces']['zn\filesystem\document\document'] = 'document';
$classMap['namespaces']['zn\filesystem\excel\arraytoxls'] = 'arraytoxls';
$classMap['namespaces']['zn\filesystem\excel\csvtoarray'] = 'csvtoarray';
$classMap['namespaces']['zn\filesystem\excel'] = 'excel';
$classMap['namespaces']['zn\filesystem\ftp\connection'] = 'connection';
$classMap['namespaces']['zn\filesystem\ftp'] = 'ftp';
$classMap['namespaces']['zn\filesystem\ftp\forge'] = 'forge';
$classMap['namespaces']['zn\filesystem\ftp\info'] = 'info';
$classMap['namespaces']['zn\filesystem\ftp\transfer'] = 'transfer';
$classMap['namespaces']['zn\filesystem\file\content'] = 'content';
$classMap['namespaces']['zn\filesystem\file\extension'] = 'extension';
$classMap['namespaces']['zn\filesystem\file'] = 'file';
$classMap['namespaces']['zn\filesystem\file\forge'] = 'forge';
$classMap['namespaces']['zn\filesystem\file\info'] = 'info';
$classMap['namespaces']['zn\filesystem\file\loader'] = 'loader';
$classMap['namespaces']['zn\filesystem\file\transfer'] = 'transfer';
$classMap['namespaces']['zn\filesystem\folder\filelist'] = 'filelist';
$classMap['namespaces']['zn\filesystem\folder'] = 'folder';
$classMap['namespaces']['zn\filesystem\folder\forge'] = 'forge';
$classMap['namespaces']['zn\filesystem\folder\info'] = 'info';
$classMap['namespaces']['zn\filesystem\generate'] = 'generate';
$classMap['namespaces']['zn\filesystem\upload'] = 'upload';
$classMap['namespaces']['zn\filesystem\excelunittest'] = 'excelunittest';
$classMap['namespaces']['zn\filesystem\ftpunittest'] = 'ftpunittest';
$classMap['namespaces']['zn\filesystem\fileunittest'] = 'fileunittest';
$classMap['namespaces']['zn\filesystem\folderunittest'] = 'folderunittest';
$classMap['namespaces']['zn\filesystem\generateunittest'] = 'generateunittest';
$classMap['namespaces']['zn\helpers\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\helpers\exception\logicexception'] = 'logicexception';
$classMap['namespaces']['zn\helpers\loggerinterface'] = 'loggerinterface';
$classMap['namespaces']['zn\helpers\cleaner'] = 'cleaner';
$classMap['namespaces']['zn\helpers\converter'] = 'converter';
$classMap['namespaces']['zn\helpers\debugger'] = 'debugger';
$classMap['namespaces']['zn\helpers\hook'] = 'hook';
$classMap['namespaces']['zn\helpers\iterate'] = 'iterate';
$classMap['namespaces']['zn\helpers\limiter'] = 'limiter';
$classMap['namespaces']['zn\helpers\logger'] = 'logger';
$classMap['namespaces']['zn\helpers\mime'] = 'mime';
$classMap['namespaces']['zn\helpers\reflect'] = 'reflect';
$classMap['namespaces']['zn\helpers\rounder'] = 'rounder';
$classMap['namespaces']['zn\helpers\searcher'] = 'searcher';
$classMap['namespaces']['zn\helpers\symbol'] = 'symbol';
$classMap['namespaces']['zn\helpers\tester'] = 'tester';
$classMap['namespaces']['zn\helpers\cleanerunittest'] = 'cleanerunittest';
$classMap['namespaces']['zn\helpers\converterunittest'] = 'converterunittest';
$classMap['namespaces']['zn\helpers\limiterunittest'] = 'limiterunittest';
$classMap['namespaces']['zn\helpers\loggerunittest'] = 'loggerunittest';
$classMap['namespaces']['zn\helpers\rounderunittest'] = 'rounderunittest';
$classMap['namespaces']['zn\helpers\searcherunittest'] = 'searcherunittest';
$classMap['namespaces']['zn\imageprocessing\exception\imagenotfoundexception'] = 'imagenotfoundexception';
$classMap['namespaces']['zn\imageprocessing\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\imageprocessing\exception\invalidimagefileexception'] = 'invalidimagefileexception';
$classMap['namespaces']['zn\imageprocessing\gdinterface'] = 'gdinterface';
$classMap['namespaces']['zn\imageprocessing\imageinterface'] = 'imageinterface';
$classMap['namespaces']['zn\imageprocessing\thumbinterface'] = 'thumbinterface';
$classMap['namespaces']['zn\imageprocessing\gd'] = 'gd';
$classMap['namespaces']['zn\imageprocessing\image'] = 'image';
$classMap['namespaces']['zn\imageprocessing\thumb'] = 'thumb';
$classMap['namespaces']['zn\imageprocessing\properties'] = 'properties';
$classMap['namespaces']['zn\imageprocessing\gdunittest'] = 'gdunittest';
$classMap['namespaces']['zn\imageprocessing\imageunittest'] = 'imageunittest';
$classMap['namespaces']['zn\imageprocessing\thumbunittest'] = 'thumbunittest';
$classMap['namespaces']['zn\individualstructures\abstracts\cachedrivermappingabstract'] = 'cachedrivermappingabstract';
$classMap['namespaces']['zn\individualstructures\abstracts\compressdrivermappingabstract'] = 'compressdrivermappingabstract';
$classMap['namespaces']['zn\individualstructures\exception\activationcolumnexception'] = 'activationcolumnexception';
$classMap['namespaces']['zn\individualstructures\exception\authenticationfailedexception'] = 'authenticationfailedexception';
$classMap['namespaces']['zn\individualstructures\exception\connectionrefusedexception'] = 'connectionrefusedexception';
$classMap['namespaces']['zn\individualstructures\exception\filenotfoundexception'] = 'filenotfoundexception';
$classMap['namespaces']['zn\individualstructures\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\individualstructures\exception\unsupporteddriverexception'] = 'unsupporteddriverexception';
$classMap['namespaces']['zn\individualstructures\cacheinterface'] = 'cacheinterface';
$classMap['namespaces']['zn\individualstructures\compressinterface'] = 'compressinterface';
$classMap['namespaces']['zn\individualstructures\isinterface'] = 'isinterface';
$classMap['namespaces']['zn\individualstructures\langinterface'] = 'langinterface';
$classMap['namespaces']['zn\individualstructures\outputinterface'] = 'outputinterface';
$classMap['namespaces']['zn\individualstructures\supportinterface'] = 'supportinterface';
$classMap['namespaces']['zn\individualstructures\benchmark'] = 'benchmark';
$classMap['namespaces']['zn\individualstructures\benchmark\elapsedtime'] = 'elapsedtime';
$classMap['namespaces']['zn\individualstructures\benchmark\fileusage'] = 'fileusage';
$classMap['namespaces']['zn\individualstructures\benchmark\memoryusage'] = 'memoryusage';
$classMap['namespaces']['zn\individualstructures\benchmark\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\benchmark\run'] = 'run';
$classMap['namespaces']['zn\individualstructures\benchmark\testing'] = 'testing';
$classMap['namespaces']['zn\individualstructures\buffer'] = 'buffer';
$classMap['namespaces']['zn\individualstructures\buffer\callback'] = 'callback';
$classMap['namespaces']['zn\individualstructures\buffer\delete'] = 'delete';
$classMap['namespaces']['zn\individualstructures\buffer\file'] = 'file';
$classMap['namespaces']['zn\individualstructures\buffer\insert'] = 'insert';
$classMap['namespaces']['zn\individualstructures\buffer\select'] = 'select';
$classMap['namespaces']['zn\individualstructures\cache'] = 'cache';
$classMap['namespaces']['zn\individualstructures\cache\drivers\apcdriver'] = 'apcdriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\apcudriver'] = 'apcudriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\filedriver'] = 'filedriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\memcachedriver'] = 'memcachedriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\opcachedriver'] = 'opcachedriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\redisdriver'] = 'redisdriver';
$classMap['namespaces']['zn\individualstructures\cache\drivers\wincachedriver'] = 'wincachedriver';
$classMap['namespaces']['zn\individualstructures\cart'] = 'cart';
$classMap['namespaces']['zn\individualstructures\cart\cartextends'] = 'cartextends';
$classMap['namespaces']['zn\individualstructures\cart\delete'] = 'delete';
$classMap['namespaces']['zn\individualstructures\cart\insert'] = 'insert';
$classMap['namespaces']['zn\individualstructures\cart\money'] = 'money';
$classMap['namespaces']['zn\individualstructures\cart\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\cart\select'] = 'select';
$classMap['namespaces']['zn\individualstructures\cart\total'] = 'total';
$classMap['namespaces']['zn\individualstructures\cart\update'] = 'update';
$classMap['namespaces']['zn\individualstructures\compress'] = 'compress';
$classMap['namespaces']['zn\individualstructures\compress\drivers\bzdriver'] = 'bzdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\gzdriver'] = 'gzdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\lzfdriver'] = 'lzfdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\rardriver'] = 'rardriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\zipdriver'] = 'zipdriver';
$classMap['namespaces']['zn\individualstructures\compress\drivers\zlibdriver'] = 'zlibdriver';
$classMap['namespaces']['zn\individualstructures\is'] = 'is';
$classMap['namespaces']['zn\individualstructures\import\bootstrapextends'] = 'bootstrapextends';
$classMap['namespaces']['zn\individualstructures\import\font'] = 'font';
$classMap['namespaces']['zn\individualstructures\import\handload'] = 'handload';
$classMap['namespaces']['zn\individualstructures\import'] = 'import';
$classMap['namespaces']['zn\individualstructures\import\masterpage'] = 'masterpage';
$classMap['namespaces']['zn\individualstructures\import\package'] = 'package';
$classMap['namespaces']['zn\individualstructures\import\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\import\script'] = 'script';
$classMap['namespaces']['zn\individualstructures\import\something'] = 'something';
$classMap['namespaces']['zn\individualstructures\import\style'] = 'style';
$classMap['namespaces']['zn\individualstructures\import\template'] = 'template';
$classMap['namespaces']['zn\individualstructures\import\view'] = 'view';
$classMap['namespaces']['zn\individualstructures\lang'] = 'lang';
$classMap['namespaces']['zn\individualstructures\output'] = 'output';
$classMap['namespaces']['zn\individualstructures\permission\method'] = 'method';
$classMap['namespaces']['zn\individualstructures\permission\page'] = 'page';
$classMap['namespaces']['zn\individualstructures\permission'] = 'permission';
$classMap['namespaces']['zn\individualstructures\permission\permissionextends'] = 'permissionextends';
$classMap['namespaces']['zn\individualstructures\permission\process'] = 'process';
$classMap['namespaces']['zn\individualstructures\security\crosssiterequestforgery'] = 'crosssiterequestforgery';
$classMap['namespaces']['zn\individualstructures\security\crosssitescripting'] = 'crosssitescripting';
$classMap['namespaces']['zn\individualstructures\security\foreignchar'] = 'foreignchar';
$classMap['namespaces']['zn\individualstructures\security\html'] = 'html';
$classMap['namespaces']['zn\individualstructures\security\injection'] = 'injection';
$classMap['namespaces']['zn\individualstructures\security\nastycode'] = 'nastycode';
$classMap['namespaces']['zn\individualstructures\security\php'] = 'php';
$classMap['namespaces']['zn\individualstructures\security\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\security\script'] = 'script';
$classMap['namespaces']['zn\individualstructures\secure'] = 'secure';
$classMap['namespaces']['zn\individualstructures\security'] = 'security';
$classMap['namespaces']['zn\individualstructures\socialite'] = 'socialite';
$classMap['namespaces']['hybridauth\adapter\abstractadapter'] = 'abstractadapter';
$classMap['namespaces']['hybridauth\adapter\adapterinterface'] = 'adapterinterface';
$classMap['namespaces']['hybridauth\adapter\datastoretrait'] = 'datastoretrait';
$classMap['namespaces']['hybridauth\adapter\oauth1'] = 'oauth1';
$classMap['namespaces']['hybridauth\adapter\oauth2'] = 'oauth2';
$classMap['namespaces']['hybridauth\adapter\openid'] = 'openid';
$classMap['namespaces']['hybridauth\data\collection'] = 'collection';
$classMap['namespaces']['hybridauth\data\parser'] = 'parser';
$classMap['namespaces']['hybridauth\exception\authorizationdeniedexception'] = 'authorizationdeniedexception';
$classMap['namespaces']['hybridauth\exception\badmethodcallexception'] = 'badmethodcallexception';
$classMap['namespaces']['hybridauth\exception\exception'] = 'exception';
$classMap['namespaces']['hybridauth\exception\exceptioninterface'] = 'exceptioninterface';
$classMap['namespaces']['hybridauth\exception\httpclientfailureexception'] = 'httpclientfailureexception';
$classMap['namespaces']['hybridauth\exception\httprequestfailedexception'] = 'httprequestfailedexception';
$classMap['namespaces']['hybridauth\exception\invalidaccesstokenexception'] = 'invalidaccesstokenexception';
$classMap['namespaces']['hybridauth\exception\invalidapplicationcredentialsexception'] = 'invalidapplicationcredentialsexception';
$classMap['namespaces']['hybridauth\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['hybridauth\exception\invalidauthorizationcodeexception'] = 'invalidauthorizationcodeexception';
$classMap['namespaces']['hybridauth\exception\invalidauthorizationstateexception'] = 'invalidauthorizationstateexception';
$classMap['namespaces']['hybridauth\exception\invalidoauthtokenexception'] = 'invalidoauthtokenexception';
$classMap['namespaces']['hybridauth\exception\invalidopenididentifierexception'] = 'invalidopenididentifierexception';
$classMap['namespaces']['hybridauth\exception\notimplementedexception'] = 'notimplementedexception';
$classMap['namespaces']['hybridauth\exception\runtimeexception'] = 'runtimeexception';
$classMap['namespaces']['hybridauth\exception\unexpectedapiresponseexception'] = 'unexpectedapiresponseexception';
$classMap['namespaces']['hybridauth\exception\unexpectedvalueexception'] = 'unexpectedvalueexception';
$classMap['namespaces']['hybridauth\httpclient\curl'] = 'curl';
$classMap['namespaces']['hybridauth\httpclient\guzzle'] = 'guzzle';
$classMap['namespaces']['hybridauth\httpclient\httpclientinterface'] = 'httpclientinterface';
$classMap['namespaces']['hybridauth\httpclient\util'] = 'util';
$classMap['namespaces']['hybridauth\hybridauth'] = 'hybridauth';
$classMap['namespaces']['hybridauth\logger\logger'] = 'logger';
$classMap['namespaces']['hybridauth\logger\loggerinterface'] = 'loggerinterface';
$classMap['namespaces']['hybridauth\logger\psr3loggerwrapper'] = 'psr3loggerwrapper';
$classMap['namespaces']['hybridauth\provider\aolopenid'] = 'aolopenid';
$classMap['namespaces']['hybridauth\provider\bitbucket'] = 'bitbucket';
$classMap['namespaces']['hybridauth\provider\discord'] = 'discord';
$classMap['namespaces']['hybridauth\provider\disqus'] = 'disqus';
$classMap['namespaces']['hybridauth\provider\dribbble'] = 'dribbble';
$classMap['namespaces']['hybridauth\provider\facebook'] = 'facebook';
$classMap['namespaces']['hybridauth\provider\foursquare'] = 'foursquare';
$classMap['namespaces']['hybridauth\provider\github'] = 'github';
$classMap['namespaces']['hybridauth\provider\gitlab'] = 'gitlab';
$classMap['namespaces']['hybridauth\provider\google'] = 'google';
$classMap['namespaces']['hybridauth\provider\instagram'] = 'instagram';
$classMap['namespaces']['hybridauth\provider\linkedin'] = 'linkedin';
$classMap['namespaces']['hybridauth\provider\odnoklassniki'] = 'odnoklassniki';
$classMap['namespaces']['hybridauth\provider\openid'] = 'openid';
$classMap['namespaces']['hybridauth\provider\paypalopenid'] = 'paypalopenid';
$classMap['namespaces']['hybridauth\provider\reddit'] = 'reddit';
$classMap['namespaces']['hybridauth\provider\stackexchange'] = 'stackexchange';
$classMap['namespaces']['hybridauth\provider\stackexchangeopenid'] = 'stackexchangeopenid';
$classMap['namespaces']['hybridauth\provider\steam'] = 'steam';
$classMap['namespaces']['hybridauth\provider\tumblr'] = 'tumblr';
$classMap['namespaces']['hybridauth\provider\twitchtv'] = 'twitchtv';
$classMap['namespaces']['hybridauth\provider\twitter'] = 'twitter';
$classMap['namespaces']['hybridauth\provider\vkontakte'] = 'vkontakte';
$classMap['namespaces']['hybridauth\provider\windowslive'] = 'windowslive';
$classMap['namespaces']['hybridauth\provider\wordpress'] = 'wordpress';
$classMap['namespaces']['hybridauth\provider\yahoo'] = 'yahoo';
$classMap['namespaces']['hybridauth\provider\yahooopenid'] = 'yahooopenid';
$classMap['namespaces']['hybridauth\storage\session'] = 'session';
$classMap['namespaces']['hybridauth\storage\storageinterface'] = 'storageinterface';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthconsumer'] = 'oauthconsumer';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthrequest'] = 'oauthrequest';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthsignaturemethod'] = 'oauthsignaturemethod';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthsignaturemethodhmacsha1'] = 'oauthsignaturemethodhmacsha1';
$classMap['namespaces']['hybridauth\thirdparty\oauth\oauthutil'] = 'oauthutil';
$classMap['namespaces']['hybridauth\thirdparty\openid\errorexception'] = 'errorexception';
$classMap['namespaces']['hybridauth\user\activity'] = 'activity';
$classMap['namespaces']['hybridauth\user\contact'] = 'contact';
$classMap['namespaces']['hybridauth\user\profile'] = 'profile';
$classMap['namespaces']['zn\individualstructures\support'] = 'support';
$classMap['namespaces']['zn\individualstructures\user\data'] = 'data';
$classMap['namespaces']['zn\individualstructures\user\forgotpassword'] = 'forgotpassword';
$classMap['namespaces']['zn\individualstructures\user\ip'] = 'ip';
$classMap['namespaces']['zn\individualstructures\user\information'] = 'information';
$classMap['namespaces']['zn\individualstructures\user\login'] = 'login';
$classMap['namespaces']['zn\individualstructures\user\logout'] = 'logout';
$classMap['namespaces']['zn\individualstructures\user\properties'] = 'properties';
$classMap['namespaces']['zn\individualstructures\user\register'] = 'register';
$classMap['namespaces']['zn\individualstructures\user\sendemail'] = 'sendemail';
$classMap['namespaces']['zn\individualstructures\user\update'] = 'update';
$classMap['namespaces']['zn\individualstructures\user'] = 'user';
$classMap['namespaces']['zn\individualstructures\user\userextends'] = 'userextends';
$classMap['namespaces']['zn\individualstructures\benchmarkunittest'] = 'benchmarkunittest';
$classMap['namespaces']['zn\individualstructures\bufferunittest'] = 'bufferunittest';
$classMap['namespaces']['zn\individualstructures\cacheunittest'] = 'cacheunittest';
$classMap['namespaces']['zn\individualstructures\cartunittest'] = 'cartunittest';
$classMap['namespaces']['zn\individualstructures\coalesceunittest'] = 'coalesceunittest';
$classMap['namespaces']['zn\individualstructures\compressunittest'] = 'compressunittest';
$classMap['namespaces']['zn\individualstructures\isunittest'] = 'isunittest';
$classMap['namespaces']['zn\individualstructures\importunittest'] = 'importunittest';
$classMap['namespaces']['zn\individualstructures\langunittest'] = 'langunittest';
$classMap['namespaces']['zn\individualstructures\outputunittest'] = 'outputunittest';
$classMap['namespaces']['zn\individualstructures\permissionunittest'] = 'permissionunittest';
$classMap['namespaces']['zn\individualstructures\securityunittest'] = 'securityunittest';
$classMap['namespaces']['zn\individualstructures\socialiteunittest'] = 'socialiteunittest';
$classMap['namespaces']['zn\individualstructures\supportunittest'] = 'supportunittest';
$classMap['namespaces']['zn\individualstructures\userunittest'] = 'userunittest';
$classMap['namespaces']['zn\requirements\abilities\exception\undefinedconstexception'] = 'undefinedconstexception';
$classMap['namespaces']['zn\requirements\controllers\basecontroller'] = 'basecontroller';
$classMap['namespaces']['zn\requirements\controllers\clcontroller'] = 'clcontroller';
$classMap['namespaces']['zn\requirements\controllers\callcontroller'] = 'callcontroller';
$classMap['namespaces']['project\controllers\controller'] = 'controller';
$classMap['namespaces']['zn\requirements\controllers\factorycontroller'] = 'factorycontroller';
$classMap['namespaces']['zn\requirements\controllers\unittestcontroller'] = 'unittestcontroller';
$classMap['namespaces']['zn\requirements\models\grandmodel'] = 'grandmodel';
$classMap['namespaces']['zn\requirements\models\model'] = 'model';
$classMap['namespaces']['zn\requirements\models\relevancemodel'] = 'relevancemodel';
$classMap['namespaces']['zn\classes\autoloader'] = 'autoloader';
$classMap['namespaces']['project\commands\command'] = 'command';
$classMap['namespaces']['zn\requirements\system\commands\cleancache'] = 'cleancache';
$classMap['namespaces']['zn\requirements\system\commands\commandlist'] = 'commandlist';
$classMap['namespaces']['zn\requirements\system\commands\controller'] = 'controller';
$classMap['namespaces']['zn\requirements\system\commands\createcontroller'] = 'createcontroller';
$classMap['namespaces']['zn\requirements\system\commands\creategrandmodel'] = 'creategrandmodel';
$classMap['namespaces']['zn\requirements\system\commands\creategrandvision'] = 'creategrandvision';
$classMap['namespaces']['zn\requirements\system\commands\createmodel'] = 'createmodel';
$classMap['namespaces']['zn\requirements\system\commands\createproject'] = 'createproject';
$classMap['namespaces']['zn\requirements\system\commands\cron'] = 'cron';
$classMap['namespaces']['zn\requirements\system\commands\cronlist'] = 'cronlist';
$classMap['namespaces']['zn\requirements\system\commands\deletecontroller'] = 'deletecontroller';
$classMap['namespaces']['zn\requirements\system\commands\deletegrandvision'] = 'deletegrandvision';
$classMap['namespaces']['zn\requirements\system\commands\deletemodel'] = 'deletemodel';
$classMap['namespaces']['zn\requirements\system\commands\deleteproject'] = 'deleteproject';
$classMap['namespaces']['zn\requirements\system\commands\endrestoration'] = 'endrestoration';
$classMap['namespaces']['zn\requirements\system\commands\endrestorationdelete'] = 'endrestorationdelete';
$classMap['namespaces']['zn\requirements\system\commands\generatedatabases'] = 'generatedatabases';
$classMap['namespaces']['zn\requirements\system\commands\library'] = 'library';
$classMap['namespaces']['zn\requirements\system\commands\method'] = 'method';
$classMap['namespaces']['zn\requirements\system\commands\removecron'] = 'removecron';
$classMap['namespaces']['zn\requirements\system\commands\result'] = 'result';
$classMap['namespaces']['zn\requirements\system\commands\shortcommand'] = 'shortcommand';
$classMap['namespaces']['zn\requirements\system\commands\startrestoration'] = 'startrestoration';
$classMap['namespaces']['zn\requirements\system\commands\terminalcommand'] = 'terminalcommand';
$classMap['namespaces']['zn\requirements\system\commands\upgrade'] = 'upgrade';
$classMap['namespaces']['zn\requirements\system\commands\upgradefiles'] = 'upgradefiles';
$classMap['namespaces']['zn\classes\config'] = 'config';
$classMap['namespaces']['zn\requirements\system\console'] = 'console';
$classMap['namespaces']['external\commands\command'] = 'command';
$classMap['namespaces']['zn\requirements\system\factory'] = 'factory';
$classMap['namespaces']['zn\core\htaccess'] = 'htaccess';
$classMap['namespaces']['zn\in'] = 'in';
$classMap['namespaces']['zn\core\kernel'] = 'kernel';
$classMap['namespaces']['project\controllers\masterpage'] = 'masterpage';
$classMap['namespaces']['zn\requirements\system\restoration'] = 'restoration';
$classMap['namespaces']['zn\singleton'] = 'singleton';
$classMap['namespaces']['zn\requirements\system\staticaccess'] = 'staticaccess';
$classMap['namespaces']['zn\core\structure'] = 'structure';
$classMap['namespaces']['project\controllers\view'] = 'view';
$classMap['namespaces']['project\controllers\zn'] = 'zn';
$classMap['namespaces']['project\controllers\viewtrait'] = 'viewtrait';
$classMap['namespaces']['zn\services\abstracts\emailmappingabstract'] = 'emailmappingabstract';
$classMap['namespaces']['zn\services\remotecommon'] = 'remotecommon';
$classMap['namespaces']['zn\services\exception\attachmentmissingexception'] = 'attachmentmissingexception';
$classMap['namespaces']['zn\services\exception\attachmentunreadableexception'] = 'attachmentunreadableexception';
$classMap['namespaces']['zn\services\exception\failuresendemailexception'] = 'failuresendemailexception';
$classMap['namespaces']['zn\services\exception\ioexception'] = 'ioexception';
$classMap['namespaces']['zn\services\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\services\exception\invalidtimeformatexception'] = 'invalidtimeformatexception';
$classMap['namespaces']['zn\services\exception\nofromexception'] = 'nofromexception';
$classMap['namespaces']['zn\services\exception\runtimeexception'] = 'runtimeexception';
$classMap['namespaces']['zn\services\exception\smtpauthexception'] = 'smtpauthexception';
$classMap['namespaces']['zn\services\exception\smtpconnectexception'] = 'smtpconnectexception';
$classMap['namespaces']['zn\services\exception\smtpdatafailureexception'] = 'smtpdatafailureexception';
$classMap['namespaces']['zn\services\exception\smtpemptyhostnameexception'] = 'smtpemptyhostnameexception';
$classMap['namespaces']['zn\services\exception\smtpemptyuserpasswordexception'] = 'smtpemptyuserpasswordexception';
$classMap['namespaces']['zn\services\exception\smtpfailedloginexception'] = 'smtpfailedloginexception';
$classMap['namespaces']['zn\services\exception\setcookieexception'] = 'setcookieexception';
$classMap['namespaces']['zn\services\exception\socketexception'] = 'socketexception';
$classMap['namespaces']['zn\services\curlinterface'] = 'curlinterface';
$classMap['namespaces']['zn\services\cookieinterface'] = 'cookieinterface';
$classMap['namespaces']['zn\services\crontabinterface'] = 'crontabinterface';
$classMap['namespaces']['zn\services\crontabintervalinterface'] = 'crontabintervalinterface';
$classMap['namespaces']['zn\services\emailinterface'] = 'emailinterface';
$classMap['namespaces']['zn\services\httpinterface'] = 'httpinterface';
$classMap['namespaces']['zn\services\methodinterface'] = 'methodinterface';
$classMap['namespaces']['zn\services\netinterface'] = 'netinterface';
$classMap['namespaces']['zn\services\processorinterface'] = 'processorinterface';
$classMap['namespaces']['zn\services\redirectinterface'] = 'redirectinterface';
$classMap['namespaces']['zn\services\remotecommoninterface'] = 'remotecommoninterface';
$classMap['namespaces']['zn\services\requestinterface'] = 'requestinterface';
$classMap['namespaces']['zn\services\restfulinterface'] = 'restfulinterface';
$classMap['namespaces']['zn\services\routeinterface'] = 'routeinterface';
$classMap['namespaces']['zn\services\sshinterface'] = 'sshinterface';
$classMap['namespaces']['zn\services\serverinterface'] = 'serverinterface';
$classMap['namespaces']['zn\services\sessioncookiecommoninterface'] = 'sessioncookiecommoninterface';
$classMap['namespaces']['zn\services\sessioninterface'] = 'sessioninterface';
$classMap['namespaces']['zn\services\uriinterface'] = 'uriinterface';
$classMap['namespaces']['zn\services\urlinterface'] = 'urlinterface';
$classMap['namespaces']['zn\services\curl'] = 'curl';
$classMap['namespaces']['zn\services\cookie'] = 'cookie';
$classMap['namespaces']['zn\services\crontab'] = 'crontab';
$classMap['namespaces']['zn\services\email\drivers\imapdriver'] = 'imapdriver';
$classMap['namespaces']['zn\services\email\drivers\maildriver'] = 'maildriver';
$classMap['namespaces']['zn\services\email\drivers\pipedriver'] = 'pipedriver';
$classMap['namespaces']['zn\services\email\drivers\smtpdriver'] = 'smtpdriver';
$classMap['namespaces']['zn\services\email\drivers\senddriver'] = 'senddriver';
$classMap['namespaces']['zn\services\email'] = 'email';
$classMap['namespaces']['zn\services\env'] = 'env';
$classMap['namespaces']['zn\services\get'] = 'get';
$classMap['namespaces']['zn\services\http'] = 'http';
$classMap['namespaces']['zn\services\method'] = 'method';
$classMap['namespaces']['zn\services\net'] = 'net';
$classMap['namespaces']['zn\services\post'] = 'post';
$classMap['namespaces']['zn\services\processor'] = 'processor';
$classMap['namespaces']['zn\services\redirect'] = 'redirect';
$classMap['namespaces']['zn\services\request'] = 'request';
$classMap['namespaces']['zn\services\restful'] = 'restful';
$classMap['namespaces']['zn\services\route'] = 'route';
$classMap['namespaces']['zn\services\ssh'] = 'ssh';
$classMap['namespaces']['zn\services\server'] = 'server';
$classMap['namespaces']['zn\services\session'] = 'session';
$classMap['namespaces']['zn\services\uri'] = 'uri';
$classMap['namespaces']['zn\services\url'] = 'url';
$classMap['namespaces']['zn\services\crontabintervaltrait'] = 'crontabintervaltrait';
$classMap['namespaces']['zn\services\sessioncookiecommontrait'] = 'sessioncookiecommontrait';
$classMap['namespaces']['zn\services\curlunittest'] = 'curlunittest';
$classMap['namespaces']['zn\services\cookieunittest'] = 'cookieunittest';
$classMap['namespaces']['zn\services\crontabunittest'] = 'crontabunittest';
$classMap['namespaces']['zn\services\emailunittest'] = 'emailunittest';
$classMap['namespaces']['zn\services\httpunittest'] = 'httpunittest';
$classMap['namespaces']['zn\services\methodunittest'] = 'methodunittest';
$classMap['namespaces']['zn\services\netunittest'] = 'netunittest';
$classMap['namespaces']['zn\services\processorunittest'] = 'processorunittest';
$classMap['namespaces']['zn\services\redirectunittest'] = 'redirectunittest';
$classMap['namespaces']['zn\services\requestunittest'] = 'requestunittest';
$classMap['namespaces']['zn\services\restfulunittest'] = 'restfulunittest';
$classMap['namespaces']['zn\services\routeunittest'] = 'routeunittest';
$classMap['namespaces']['zn\services\sshunittest'] = 'sshunittest';
$classMap['namespaces']['zn\services\serverunittest'] = 'serverunittest';
$classMap['namespaces']['zn\services\sessionunittest'] = 'sessionunittest';
$classMap['namespaces']['zn\services\uriunittest'] = 'uriunittest';
$classMap['namespaces']['zn\services\urlunittest'] = 'urlunittest';
$classMap['namespaces']['zn\viewobjects\abstracts\gridabstract'] = 'gridabstract';
$classMap['namespaces']['zn\viewobjects\abstracts\htmlhelpersabstract'] = 'htmlhelpersabstract';
$classMap['namespaces']['zn\viewobjects\exception\databaseerrorexception'] = 'databaseerrorexception';
$classMap['namespaces']['zn\viewobjects\exception\invalidargumentexception'] = 'invalidargumentexception';
$classMap['namespaces']['zn\viewobjects\exception\nosearchexception'] = 'nosearchexception';
$classMap['namespaces']['zn\viewobjects\exception\notableexception'] = 'notableexception';
$classMap['namespaces']['zn\viewobjects\exception\permissionroleidexception'] = 'permissionroleidexception';
$classMap['namespaces']['zn\viewobjects\cdninterface'] = 'cdninterface';
$classMap['namespaces']['zn\viewobjects\calendarinterface'] = 'calendarinterface';
$classMap['namespaces']['zn\viewobjects\captchainterface'] = 'captchainterface';
$classMap['namespaces']['zn\viewobjects\paginationinterface'] = 'paginationinterface';
$classMap['namespaces']['zn\viewobjects\styleinterface'] = 'styleinterface';
$classMap['namespaces']['zn\viewobjects\validateinterface'] = 'validateinterface';
$classMap['namespaces']['zn\viewobjects\validationinterface'] = 'validationinterface';
$classMap['namespaces']['zn\viewobjects\validatorinterface'] = 'validatorinterface';
$classMap['namespaces']['zn\viewobjects\cdn'] = 'cdn';
$classMap['namespaces']['zn\viewobjects\calendar'] = 'calendar';
$classMap['namespaces']['zn\viewobjects\captcha'] = 'captcha';
$classMap['namespaces']['zn\viewobjects\form'] = 'form';
$classMap['namespaces']['zn\viewobjects\dbgrid'] = 'dbgrid';
$classMap['namespaces']['zn\viewobjects\mlgrid'] = 'mlgrid';
$classMap['namespaces']['zn\viewobjects\html'] = 'html';
$classMap['namespaces']['zn\viewobjects\html\helpers\lists'] = 'lists';
$classMap['namespaces']['zn\viewobjects\html\helpers\table'] = 'table';
$classMap['namespaces']['zn\viewobjects\javascript\components\aceeditor'] = 'aceeditor';
$classMap['namespaces']['zn\viewobjects\javascript\components\ajax'] = 'ajax';
$classMap['namespaces']['zn\viewobjects\javascript\components\charts'] = 'charts';
$classMap['namespaces']['zn\viewobjects\javascript\components\componentsextends'] = 'componentsextends';
$classMap['namespaces']['zn\viewobjects\javascript\components\datatables'] = 'datatables';
$classMap['namespaces']['zn\viewobjects\javascript\components\datepicker'] = 'datepicker';
$classMap['namespaces']['zn\viewobjects\javascript\components\dropdown'] = 'dropdown';
$classMap['namespaces']['zn\viewobjects\javascript\components\flexslider'] = 'flexslider';
$classMap['namespaces']['zn\viewobjects\javascript\components\form'] = 'form';
$classMap['namespaces']['zn\viewobjects\javascript\components\gridsystem'] = 'gridsystem';
$classMap['namespaces']['zn\viewobjects\javascript\components\modal'] = 'modal';
$classMap['namespaces']['zn\viewobjects\javascript\components\pagination'] = 'pagination';
$classMap['namespaces']['zn\viewobjects\javascript\components\select2'] = 'select2';
$classMap['namespaces']['zn\viewobjects\javascript\components\tabs'] = 'tabs';
$classMap['namespaces']['zn\viewobjects\javascript\components\tinymceeditor'] = 'tinymceeditor';
$classMap['namespaces']['zn\viewobjects\jc'] = 'jc';
$classMap['namespaces']['zn\viewobjects\pagination'] = 'pagination';
$classMap['namespaces']['zn\viewobjects\sheet'] = 'sheet';
$classMap['namespaces']['zn\viewobjects\style'] = 'style';
$classMap['namespaces']['zn\viewobjects\templatewizard'] = 'templatewizard';
$classMap['namespaces']['project\controllers\theme'] = 'theme';
$classMap['namespaces']['zn\viewobjects\wizard'] = 'wizard';
$classMap['namespaces']['zn\viewobjects\validate'] = 'validate';
$classMap['namespaces']['zn\viewobjects\validation'] = 'validation';
$classMap['namespaces']['zn\viewobjects\validator'] = 'validator';
$classMap['namespaces']['zn\viewobjects\formelementstrait'] = 'formelementstrait';
$classMap['namespaces']['zn\viewobjects\htmlelementstrait'] = 'htmlelementstrait';
$classMap['namespaces']['zn\viewobjects\validationpropertiestrait'] = 'validationpropertiestrait';
$classMap['namespaces']['zn\viewobjects\viewcommontrait'] = 'viewcommontrait';
$classMap['namespaces']['zn\viewobjects\cdnunittest'] = 'cdnunittest';
$classMap['namespaces']['zn\viewobjects\calendarunittest'] = 'calendarunittest';
$classMap['namespaces']['zn\viewobjects\captchaunittest'] = 'captchaunittest';
$classMap['namespaces']['zn\viewobjects\dbgridunittest'] = 'dbgridunittest';
$classMap['namespaces']['zn\viewobjects\formunittest'] = 'formunittest';
$classMap['namespaces']['zn\viewobjects\htmlunittest'] = 'htmlunittest';
$classMap['namespaces']['zn\viewobjects\mlgridunittest'] = 'mlgridunittest';
$classMap['namespaces']['zn\viewobjects\paginationunittest'] = 'paginationunittest';
$classMap['namespaces']['zn\viewobjects\sheetunittest'] = 'sheetunittest';
$classMap['namespaces']['zn\viewobjects\styleunittest'] = 'styleunittest';
$classMap['namespaces']['zn\viewobjects\templatewizardunittest'] = 'templatewizardunittest';
$classMap['namespaces']['zn\viewobjects\validateunittest'] = 'validateunittest';
$classMap['namespaces']['zn\viewobjects\validationunittest'] = 'validationunittest';
$classMap['namespaces']['zn\viewobjects\validatorunittest'] = 'validatorunittest';
$classMap['namespaces']['project\commands\example'] = 'example';
