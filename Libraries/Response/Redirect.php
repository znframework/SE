<?php namespace ZN\Response;
/**
 * ZN PHP Web Framework
 * 
 * "Simplicity is the ultimate sophistication." ~ Da Vinci
 * 
 * @package ZN
 * @license MIT [http://opensource.org/licenses/MIT]
 * @author  Ozan UYKUN [ozan@znframework.com]
 */

use ZN\IS;
use ZN\Singleton;
use ZN\Request\URL;

class Redirect implements RedirectInterface
{
    //--------------------------------------------------------------------------------------------------------
    // Fix
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string = 'redirect:'
    //
    //--------------------------------------------------------------------------------------------------------
    protected $fix = 'redirect:';

    //--------------------------------------------------------------------------------------------------------
    // $redirect
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $redirect =
    [
        'time'   => 0,
        'data'   => []
    ];

    /**
     * Magic Constructor
     */
    public function __construct()
    {
        $this->session = Singleton::class('ZN\Storage\Session');
    }

    //--------------------------------------------------------------------------------------------------------
    // Status -> 4.3.5
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public static function status() : Int
    {
        return server('redirectStatus');
    }

    //--------------------------------------------------------------------------------------------------------
    // Url -> 4.3.5
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public static function url() : String
    {
        return server('redirectUrl');
    }

    //--------------------------------------------------------------------------------------------------------
    // Query String -> 4.3.5
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public static function queryString() : String
    {
        return server('redirectQueryString');
    }

    /**
     * Page refresh.
     * 
     * @param string $url  = NULL
     * @param int    $time = 0
     * @param array  $data = NULL
     * @param bool   $exit = false
     */
    public function refresh(String $url = NULL, Int $time = 0, Array $data = NULL, Bool $exit = false)
    {
        $this->location($url, $time, $data, $exit, __FUNCTION__);
    }

    //--------------------------------------------------------------------------------------------------
    // redirect() -> 5.1.0
    //--------------------------------------------------------------------------------------------------
    //
    // @param string $url
    // @param int    $time
    // @param array  $data
    // @param bool   $exit
    //
    //--------------------------------------------------------------------------------------------------
    public function location(String $url = NULL, Int $time = 0, Array $data = NULL, Bool $exit = true, $type = 'location')
    {
        if( ! IS::url((string) $url) )
        {
            $url = URL::site($url);
        }

        if( ! empty($data) )
        {
            foreach( $data as $k => $v )
            {
                $this->session->insert($this->fix . $k, $v);
            }
        }
        
        if( $type === 'location' )
        {
            if( $time > 0 )
            {
                sleep($time);
            }
    
            header('Location: ' . $url, true);   
        }
        else
        {
            header('Refresh:'.$time.'; url='.$url);
        }

        if( $exit === true )
        {
            exit;
        }
    }

    //--------------------------------------------------------------------------------------------------
    // redirectData() -> 5.1.0
    //--------------------------------------------------------------------------------------------------
    //
    // @param string $k
    //
    // @return mixed
    //
    //--------------------------------------------------------------------------------------------------
    public function selectData(String $k)
    {
        if( $data = $this->session->select($this->fix . $k) )
        {
            return $data;
        }
        else
        {
            return false;
        }
    }

    //--------------------------------------------------------------------------------------------------
    // redirectDeleteData() -> 5.1.0
    //--------------------------------------------------------------------------------------------------
    //
    // @param mixed $data
    //
    // @return bool
    //
    //--------------------------------------------------------------------------------------------------
    public function deleteData($data) : Bool
    {
        if( is_array($data) ) foreach( $data as $v )
        {
            $this->session->delete($this->fix . $v);
        }
        else
        {
            return $this->session->delete($this->fix . $data);
        }

        return true;
    }

    //--------------------------------------------------------------------------------------------------------
    // action()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string $action
    //
    //--------------------------------------------------------------------------------------------------------
    public function action(String $action = NULL)
    {
        $time = $this->redirect['time'];
        $data = $this->redirect['data'];

        $this->redirect = [];

        return $this->location($action, $time, $data);
    }

    //--------------------------------------------------------------------------------------------------------
    // time()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var numeric $time
    //
    //--------------------------------------------------------------------------------------------------------
    public function time(Int $time = 0) : Redirect
    {
        $this->redirect['time'] = $time;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // wait()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var numeric $time
    //
    //--------------------------------------------------------------------------------------------------------
    public function wait(Int $time = 0) : Redirect
    {
        $this->redirect['time'] = $time;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // data()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array $data
    //
    //--------------------------------------------------------------------------------------------------------
    public function data(Array $data) : Redirect
    {
        $this->redirect['data'] = $data;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // insert()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array $data
    //
    //--------------------------------------------------------------------------------------------------------
    public function insert(Array $data) : Redirect
    {
        $this->redirect['data'] = $data;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // select()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string $key
    //
    //--------------------------------------------------------------------------------------------------------
    public function select(String $key)
    {
        return $this->selectData($key);
    }

    //--------------------------------------------------------------------------------------------------------
    // delete()
    //--------------------------------------------------------------------------------------------------------
    //
    // @var mixed $key
    //
    //--------------------------------------------------------------------------------------------------------
    public function delete($key) : Bool
    {
        return $this->deleteData($key);
    }
}
