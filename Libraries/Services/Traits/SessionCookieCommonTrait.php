<?php namespace ZN\Services;
/**
 * ZN PHP Web Framework
 * 
 * "Simplicity is the ultimate sophistication." ~ Da Vinci
 * 
 * @package ZN
 * @license MIT [http://opensource.org/licenses/MIT]
 * @author  Ozan UYKUN [ozan@znframework.com]
 */

use ZN\DataTypes\Strings;
use ZN\DataTypes\Arrays;

trait SessionCookieCommonTrait
{
    //--------------------------------------------------------------------------------------------------------
    // Regenerate
    //--------------------------------------------------------------------------------------------------------
    //
    // @var bool
    //
    //--------------------------------------------------------------------------------------------------------
    protected $regenerate = true;

    //--------------------------------------------------------------------------------------------------------
    // Encode
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $encode = [];

    //--------------------------------------------------------------------------------------------------------
    // Magic Call
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $method
    // @param array  $parameters
    //
    //--------------------------------------------------------------------------------------------------------
    public function __call($method, $parameters)
    {
        $split = Strings\Split::upperCase($method);

        if( Arrays\GetElement::last($split) === 'Delete' )
        {
            $method = 'delete';

            return $this->delete($split[0]);
        }

        if( $method === 'all' )
        {
            $method = 'selectAll';

            return $this->$method();
        }

        if( $param = ($parameters[0] ?? NULL) )
        {
            return $this->insert($method, $param);
        }

        return $this->select($method);
    }

    //--------------------------------------------------------------------------------------------------------
    // Encode
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name
    // @param string $value
    //
    //--------------------------------------------------------------------------------------------------------
    public function encode(String $nameAlgo = NULL, String $valueAlgo = NULL)
    {
        $this->encode['name']  = $nameAlgo;
        $this->encode['value'] = $valueAlgo;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Decode
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $nameAlgo
    //
    //--------------------------------------------------------------------------------------------------------
    public function decode(String $nameAlgo)
    {
        $this->encode['name'] = $nameAlgo;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Regenerate
    //--------------------------------------------------------------------------------------------------------
    //
    // @param bool $regenerate
    //
    //--------------------------------------------------------------------------------------------------------
    public function regenerate(Bool $regenerate = true)
    {
        $this->regenerate = $regenerate;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Methods
    //--------------------------------------------------------------------------------------------------------
    //
    // defaultVariable()
    //
    //--------------------------------------------------------------------------------------------------------
    protected function defaultVariable()
    {
        $this->name       = NULL;
        $this->value      = NULL;
        $this->encode     = [];
        $this->regenerate = true;
    }
}
