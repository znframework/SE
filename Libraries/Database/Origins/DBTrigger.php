<?php namespace ZN\Database;
/**
 * ZN PHP Web Framework
 * 
 * "Simplicity is the ultimate sophistication." ~ Da Vinci
 * 
 * @package ZN
 * @license MIT [http://opensource.org/licenses/MIT]
 * @author  Ozan UYKUN [ozan@znframework.com]
 */

class DBTrigger extends Connection
{
    //--------------------------------------------------------------------------------------------------------
    // Trigger
    //--------------------------------------------------------------------------------------------------------
    //
    // @var object
    //
    //--------------------------------------------------------------------------------------------------------
    protected $trigger;

    //--------------------------------------------------------------------------------------------------------
    // Database Manipulation Methods Başlangıç
    //--------------------------------------------------------------------------------------------------------

    public function __construct($settings = [])
    {
        parent::__construct($settings);

        $this->trigger = $this->_drvlib('Trigger', $settings);
    }

    //--------------------------------------------------------------------------------------------------------
    // user()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $user
    //
    //--------------------------------------------------------------------------------------------------------
    public function user(String $user) : DBTrigger
    {
        $this->trigger->user($user);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // when()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type: BEFORE, AFTER
    //
    //--------------------------------------------------------------------------------------------------------
    public function when(String $type) : DBTrigger
    {
        $this->trigger->when($type);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // event()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type: INSERT, UPDATE, DELETE
    //
    //--------------------------------------------------------------------------------------------------------
    public function event(String $type) : DBTrigger
    {
        $this->trigger->event($type);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // order()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type: FOLLOWS, PRECEDES
    //
    //--------------------------------------------------------------------------------------------------------
    public function order(String $type, String $name) : DBTrigger
    {
        $this->trigger->order($type, $name);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // body()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $args: BEGIN $arg1; $arg2; .... $arg3; END;
    //
    //--------------------------------------------------------------------------------------------------------
    public function body(...$args) : DBTrigger
    {
        $this->trigger->body(...$args);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // createTrigger()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name
    //
    //--------------------------------------------------------------------------------------------------------
    public function createTrigger(String $name)
    {
        $query = $this->trigger->createTrigger($name);

        return $this->_runQuery($query);
    }

    //--------------------------------------------------------------------------------------------------------
    // create()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name
    //
    //--------------------------------------------------------------------------------------------------------
    public function create(String $name)
    {
        return $this->createTrigger($name);
    }

    //--------------------------------------------------------------------------------------------------------
    // dropTrigger()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name
    //
    //--------------------------------------------------------------------------------------------------------
    public function dropTrigger(String $name)
    {
        $query = $this->trigger->dropTrigger($name);

        return $this->_runQuery($query);
    }

    //--------------------------------------------------------------------------------------------------------
    // dropTrigger()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name
    //
    //--------------------------------------------------------------------------------------------------------
    public function drop(String $name)
    {
        return $this->dropTrigger($name);
    }

    //--------------------------------------------------------------------------------------------------------
    // list()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function list(String $name = NULL)
    {
        $query = $this->trigger->list($name);

        $this->_runQuery($query);

        if( $name === NULL )
        {
            return $this->db->result();
        }
        else
        {
            return $this->db->row();
        }
    }

    //--------------------------------------------------------------------------------------------------------
    // list()
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function exists(String $name)
    {
        $query = $this->trigger->exists($name);

        $this->_runQuery($query);

        return (bool) $this->db->numRows();
    }
}
